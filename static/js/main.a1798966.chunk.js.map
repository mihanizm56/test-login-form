{"version":3,"sources":["pages/routes.ts","pages/login/route.ts","_components/root-components/index.tsx","_components/app/index.tsx","index.tsx","_constants/routes.ts"],"names":["routes","name","LOGIN_ROUTE_NAME","path","loadAction","RootComponents","App","memo","router","key","nodeName","content","ROOT_ELEMENT","document","getElementById","configureRouter","defaultRoute","eventNameToCancelRequests","ABORT_REQUEST_EVENT_NAME","enablei18nMiddleware","store","createAppStore","rootReducers","NOTIFICATIONS_REDUCER_NAME","notificationsState","dependencies","setModalAction","setDependencies","add","start","ReactDOM","render"],"mappings":"uRAEaA,EAAS,CCAP,CACbC,KAAMC,IACNC,KAAM,mBACNC,WAAY,kBAAM,uD,QCFPC,EAAiB,kBAC5B,oCACE,kBAAC,IAAD,QCKSC,EAAMC,gBAAK,gBAAGC,EAAH,EAAGA,OAAH,OACtB,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAgBC,IAAK,EAAGD,OAAQA,GAC9B,kBAAC,IAAD,CAAWE,SAAS,KAAI,qBAAGC,gBCY3BC,G,qBAAeC,SAASC,eAAe,SAEvCN,EAASO,YAAgB,CAC7BC,aAAcd,IACde,0BAA2BC,2BAC3BC,sBAAsB,IAElBC,EAAQC,YAAe,CAC3Bb,SACAS,0BAA2BC,2BAC3BI,aAAa,eACVC,IAA6BC,KAGhCC,aAAc,CAAEC,sBAGlBlB,EAAOmB,gBAAgB,CACrBP,QACApB,WAGFQ,EAAOoB,IAAI5B,GAEXQ,EAAOqB,OAAM,WACXC,IAASC,OACP,kBAAC,IAAD,CAAUX,MAAOA,GACf,kBAACd,EAAD,CAAKE,OAAQA,KAEfI,O,gCCvDJ,kCAAO,IAAMV,EAAmB,S","file":"static/js/main.a1798966.chunk.js","sourcesContent":["import home from './login/route';\n\nexport const routes = [home];\n","import { LOGIN_ROUTE_NAME } from '@/_constants/routes';\r\n\r\nexport default {\r\n  name: LOGIN_ROUTE_NAME,\r\n  path: '/test-login-form',\r\n  loadAction: () => import('./index'),\r\n};\r\n","import React from 'react';\r\nimport { Notifications } from '@wildberries/notifications';\r\n\r\nexport const RootComponents = () => (\r\n  <>\r\n    <Notifications />\r\n  </>\r\n);\r\n","import React, { memo } from 'react';\nimport { RouteNode } from '@wildberries/service-router';\nimport { Router } from 'router5';\nimport { RouterProvider } from 'react-router5';\nimport { RootComponents } from '@/_components/root-components';\n\ntype PropsType = {\n  router: Router;\n};\n\nexport const App = memo(({ router }: PropsType) => (\n  <>\n    <RootComponents />\n    <RouterProvider key={1} router={router}>\n      <RouteNode nodeName=\"\">{({ content }) => content}</RouteNode>\n    </RouterProvider>\n  </>\n));\n","import 'fast-text-encoding/text';\n/* \n    if you need some polyfills and you are not in \"rus\" or \"euro\" version\n    please insert below (package is included)\n    import 'react-app-polyfill/stable';\n*/\n\nimport 'reset-css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createAppStore } from '@wildberries/redux-core-modules';\nimport { configureRouter } from '@wildberries/service-router';\nimport { ABORT_REQUEST_EVENT_NAME } from '@mihanizm56/fetch-api';\nimport {\n  notificationsState,\n  NOTIFICATIONS_REDUCER_NAME,\n  setModalAction,\n} from '@wildberries/notifications';\nimport { routes } from '@/pages/routes';\nimport { App } from '@/_components/app';\nimport 'normalize.css';\nimport '@/styles/global.css';\nimport '@/styles/variables.module.scss';\nimport { LOGIN_ROUTE_NAME } from './_constants/routes';\n\nconst ROOT_ELEMENT = document.getElementById('root');\n\nconst router = configureRouter({\n  defaultRoute: LOGIN_ROUTE_NAME,\n  eventNameToCancelRequests: ABORT_REQUEST_EVENT_NAME,\n  enablei18nMiddleware: true,\n});\nconst store = createAppStore({\n  router,\n  eventNameToCancelRequests: ABORT_REQUEST_EVENT_NAME,\n  rootReducers: {\n    [NOTIFICATIONS_REDUCER_NAME]: notificationsState,\n  },\n\n  dependencies: { setModalAction },\n});\n\nrouter.setDependencies({\n  store,\n  routes,\n});\n\nrouter.add(routes);\n\nrouter.start(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App router={router} />\n    </Provider>,\n    ROOT_ELEMENT,\n  );\n});\n","export const LOGIN_ROUTE_NAME = 'login';\n"],"sourceRoot":""}
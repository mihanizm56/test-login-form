{"version":3,"sources":["_components/icons/navigation-zoom-icon/index.tsx","_components/icons/navigation-eye-icon/index.tsx","_components/icons/navigation-eye-no-icon/index.tsx","_components/icons/basic-check-mark-icon/index.tsx","_components/icons/basic-minus-icon/index.tsx","_components/overlay/index.tsx","_components/preloader/index.tsx","_components/button/_utils/preloader-color.ts","pages/login/page/index.module.scss","_components/label/index.module.scss","_components/button/index.tsx","_components/overlay/index.module.scss","_components/preloader/index.module.scss","_components/button/index.module.scss","_components/inputs/simple-input/index.module.scss","_components/inputs/form-simple-input/index.module.scss","_components/text/index.tsx","_components/text/index.module.scss","_components/button-link/index.module.scss","_components/checkbox/checkbox.module.scss","_components/checkbox/toggle.module.scss","_components/form-checkbox/index.module.scss","pages/login/page/_components/connected-login-form/_components/login-form-view/index.module.scss","_components/icons/basic-menu-icon/index.tsx","_components/icons/navigation-plus-icon/index.tsx","_components/icons/navigation-close-medium-smaller-icon/index.tsx","_components/button/_utils/get-icon.tsx","pages/login/_redux/login-module/actions.ts","api/requests/login/response-schema.ts","api/requests/login/index.ts","api/requests/login/make-request-config.ts","api/endpoints/index.ts","pages/login/_constants/index.ts","pages/login/_redux/login-module/sagas/_utils/get-filtered-form-errors.ts","pages/login/_redux/login-module/sagas/login-worker-saga.ts","pages/login/_redux/login-module/sagas/login-watcher-saga.ts","pages/login/_redux/login-module/reducer.ts","pages/login/_redux/login-module/selectors.ts","pages/login/_redux/login-module/constants.ts","_utils/omit.ts","_components/label/index.tsx","_constants/key-codes.ts","_components/inputs/simple-input/index.tsx","_components/inputs/_utils/get-is-error-field.ts","_components/inputs/_utils/get-is-value-empty.ts","_components/inputs/form-simple-input/index.tsx","_components/button-link/_constants/index.ts","_components/button-link/_components/button-loader/index.tsx","_components/button-link/_components/button-link-view/index.tsx","_components/button-link/index.tsx","_components/button-link/_utils/get-button-link-class-names.ts","_components/button-link/_utils/get-button-text-class-names.ts","_components/button-link/_utils/get-tag-props.ts","_components/checkbox/index.tsx","_components/form-checkbox/index.tsx","pages/login/page/_components/connected-login-form/_components/login-form-view/index.tsx","pages/login/page/_components/connected-login-form/_utils/form-validations-config.ts","pages/login/page/_components/connected-login-form/index.tsx","pages/login/page/index.tsx","pages/login/store-inject-config/index.ts","pages/login/index.tsx"],"names":["NavigationZoomIcon","memo","fill","height","viewBox","width","xmlns","clipRule","d","fillRule","colorTypes","defaultColor","activeColor","NavigationEyeIcon","type","NavigationEyeNoIcon","disabledColor","BasicCheckMarkIcon","colorType","BasicMinusIcon","cn","classNames","bind","styles","Overlay","absolute","children","inherit","onClick","opacity","opened","timeout","transparent","whiteBackground","withBorderRadius","isExitAnimationDisabled","useEffect","document","documentElement","style","setProperty","enter","exit","in","unmountOnExit","className","role","classnames","Preloader","size","color","Boolean","preloaderColor","variant","darkThemePreset","module","exports","allButtonVariants","Button","text","disabled","textUpperCase","isLoading","withLoader","Icon","fullWidth","isTextCenter","adaptiveMenu","adaptiveClose","needPreloader","useMemo","includes","textNegative","textNeutral","textPositive","getIconVariant","getIcon","handleButtonClick","useCallback","event","stopPropagation","preloaderColorCheck","iconSingle","buttonDarkVariant","iconNoVariantBig","iconNoVariantSmall","adaptiveIconClose","adaptiveIconMenu","buttonIconElementSingle","buttonIconElementSingleNoVariant","buttonIconSmall","Text","isBold","isUpperCase","tagType","isEllipsis","TagName","menuColor","BasicMenuIcon","NavigationPlusIcon","NavigationCloseMediumSmallerIcon","setExternalErrorsLoginFormAction","payload","responseSchema","Joi","object","result","string","required","loginRequest","options","PureRestRequest","postRequest","login","password","endpoint","body","makeRequestConfig","LOGIN_FORM_FIELD_NAMES","oferta","getFilteredFormErrors","errorsObject","Object","keys","reduce","acc","errorFieldName","loginWorkerSaga","formValues","put","batchActions","call","error","errorText","additionalErrors","filteredFormErrors","Error","setModalAction","status","title","message","loginWatcherSaga","take","fork","initialState","externalErrors","reducer","state","loginFormStorageSelector","store","loginFormExternalErrorsSelector","createSelector","loginFormIsLoadingSelector","loginFormHasExternalErrorsSelector","length","getOmittedObject","key","Label","htmlFor","keyCodes","SimpleInput","autoComplete","inputRef","id","isDarkTheme","isError","name","onBlur","onChange","onFocus","onKeyPress","placeholder","readOnly","value","useState","isOpenEye","setIsOpenEye","isSearchIcon","isPasswordIcon","PasswordIcon","changeEyeIcons","changeTypes","typeForButton","TargetIcon","handleBlur","blurValue","currentTarget","handleChange","changeValue","handleClick","clickValue","handleFocus","focusValue","handleKeyPress","keyCode","which","handleIconClick","ref","getIsErrorField","modified","validationErrorMessage","externalErrorMessage","isValueEmpty","Array","getIsValueEmpty","FormSimpleInput","input","label","labelBadgeIcon","labelBadgeText","meta","errorTextValue","optionClickEvent","optionKeyPressEvent","BUTTON_VARIANTS","accent","interface","main","neutral","positive","negative","remove","ButtonLoader","ButtonLinkView","icon","routeName","styleButtonLink","styleButtonText","Tag","tagName","tagOptionalProps","isShowLoader","ButtonLink","isBreadcrumbs","isPopUp","textSize","getButtonLinkClassNames","getButtonTextClassNames","preventDefault","href","getTagProps","checkboxClassNames","forCheckboxStyle","toggleClassNames","forToggleStyle","targetClickKey","Checkbox","indeterminate","checkboxRef","radio","toggle","checked","isActive","setIsActive","setActive","checkboxStyle","toggleStyle","inputClasses","inputType","hasIcon","changeChecked","charCode","handleClickInput","handleClickLabel","FormCheckbox","handleChangeFormCheckbox","BLOCK_NAME","LoginFormView","submitLoginForm","changeFormField","formValidations","loginFormHasExternalErrors","onSubmit","render","handleSubmit","invalid","form","component","validate","subscription","errors","simpleFieldValidator","SimpleValidator","FORM_VALIDATIONS_CONFIG","composeValidators","requiredValidator","minLenghtValidate","maxLenghtValidate","WrappedContainer","handleSubmitForm","values","props","handleChangeField","loginFormExternalErrors","handleChangeFormErrors","newExternalErrors","setExternalErrors","this","loginFormIsLoading","Component","mapDispatchToProps","ConnectedLoginForm","connect","Page","storeInjectConfig","sagasToInject","saga","reducersToInject","loginFormStorage","pageNode","LOGIN_ROUTE_NAME","action","a","fromState","toState","content","withoutRemovingReducers","nodeName"],"mappings":"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","file":"static/js/4.8a583d39.chunk.js","sourcesContent":["import React, { memo } from 'react';\n\nexport const NavigationZoomIcon = memo(() => (\n  <svg\n    fill=\"none\"\n    height=\"24\"\n    viewBox=\"-4 -4 24 24\"\n    width=\"24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      clipRule=\"evenodd\"\n      d=\"M9.82759 10.9687C8.8172 11.7474 7.55108 12.2106 6.17679 12.2106C2.87091 12.2106 0.190956 9.53061 0.190956\n       6.22473C0.190956 2.91884 2.87091 0.238892 6.17679 0.238892C9.48268 0.238892 12.1626 2.91884 12.1626\n        6.22473C12.1626 7.61567 11.6882 8.89581 10.8923 9.91214L15.4555 14.4753C15.7484 14.7682 15.7484 15.2431 15.4555\n         15.5359C15.1626 15.8288 14.6877 15.8288 14.3948 15.5359L9.82759 10.9687ZM10.6626 6.22473C10.6626 8.70219\n          8.65425 10.7106 6.17679 10.7106C3.69933 10.7106 1.69096 8.70219 1.69096 6.22473C1.69096 3.74727 3.69933\n           1.73889 6.17679 1.73889C8.65425 1.73889 10.6626 3.74727 10.6626 6.22473Z\"\n      fill=\"#D1CFD7\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n));\n","import React, { FC, memo } from 'react';\nimport { NavigationEyeColorType } from './_types';\n\nconst colorTypes = {\n  defaultColor: '#D1CFD7',\n  activeColor: '#3A0078',\n};\n\ntype NavigationEyeIconPropsType = {\n  /** выбор типа иконки */\n  type?: NavigationEyeColorType;\n};\n\nexport const NavigationEyeIcon: FC<NavigationEyeIconPropsType> = memo(\n  ({ type = 'defaultColor' }: NavigationEyeIconPropsType) => (\n    <svg\n      fill=\"none\"\n      height=\"24\"\n      viewBox=\"-1 -4 24 24\"\n      width=\"24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        clipRule=\"evenodd\"\n        d=\"M11 0C13.6819 0 16.2465 1.43062 18.6364 3.78115C19.4518 4.58305 20.1894 5.43916 20.8388 6.29562C21.2306\n       6.81244 21.5088 7.21899 21.6612 7.4612L22 8L21.6612 8.5388C21.5088 8.781 21.2306 9.18756 20.8388 9.70438C20.1894\n        10.5608 19.4518 11.417 18.6364 12.2189C16.2465 14.5694 13.6819 16 11 16C8.31805 16 5.75353 14.5694\n         3.36355 12.2189C2.5482 11.417 1.81056 10.5608 1.1612 9.70438C0.76936 9.18756 0.491158 8.781 0.338838\n          8.5388L0 8L0.338838 7.4612C0.491158 7.21899 0.76936 6.81244 1.1612 6.29562C1.81056 5.43916 2.5482\n           4.58305 3.36355 3.78115C5.75353 1.43062 8.31805 0 11 0ZM19.2816 7.51681C18.687 6.73265 18.0111 5.94813\n            17.2695 5.21878C15.211 3.19431 13.07 1.99993 11.0001 1.99993C8.93024 1.99993 6.78921 3.19431 4.73076\n             5.21878C3.98917 5.94813 3.31321 6.73265 2.71868 7.51681C2.59028 7.68617 2.47162 7.84775 2.36314\n              7.99993C2.47162 8.15211 2.59028 8.31369 2.71868 8.48305C3.31321 9.26721 3.98917 10.0517 4.73076\n               10.7811C6.78921 12.8056 8.93024 13.9999 11.0001 13.9999C13.07 13.9999 15.211 12.8056 17.2695\n                10.7811C18.0111 10.0517 18.687 9.26721 19.2816 8.48305C19.41 8.31369 19.5286 8.15211 19.6371\n                 7.99993C19.5286 7.84775 19.41 7.68617 19.2816 7.51681ZM7.06688 8C7.06688 10.2091 8.8278 12 11\n                  12C13.1722 12 14.9331 10.2091 14.9331 8C14.9331 5.79086 13.1722 4 11 4C8.8278 4 7.06688 5.79086\n                   7.06688 8ZM12.9665 8C12.9665 9.10457 12.0861 10 11 10C9.91388 10 9.03342 9.10457 9.03342 8C9.03342\n                    6.89543 9.91388 6 11 6C12.0861 6 12.9665 6.89543 12.9665 8Z\"\n        fill={colorTypes[type]}\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  ),\n);\n","import React, { memo } from 'react';\n\nexport const NavigationEyeNoIcon = memo(() => (\n  <svg\n    fill=\"none\"\n    height=\"24\"\n    viewBox=\"-1 -1 24 24\"\n    width=\"24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      clipRule=\"evenodd\"\n      d=\"M1.86254 0.5L0.471968 1.88686L4.46878 5.873C4.09645 6.18075 3.72797 6.51124 3.36355 6.86271C2.5482 7.6491\n       1.81056 8.48865 1.1612 9.32855C0.76936 9.83537 0.491158 10.2341 0.338838 10.4716L0 11L0.338838\n        11.5283C0.491158 11.7659 0.76936 12.1645 1.1612 12.6714C1.81056 13.5113 2.5482 14.3508 3.36355 15.1372C5.75353\n         17.4423 8.31805 18.8452 11 18.8452C12.6921 18.8452 14.3376 18.2867 15.9219 17.2955L20.1376 21.5L21.5282\n          20.1131L1.86254 0.5ZM14.4854 15.8629L12.998 14.3795C12.4124 14.7246 11.7294 14.9226 11 14.9226C8.82775\n           14.9226 7.06683 13.1664 7.06683 11C7.06683 10.2725 7.2654 9.59127 7.61142 9.00726L5.86701 7.2675C5.48609\n            7.57387 5.10698 7.90963 4.73064 8.27261C3.98905 8.98785 3.31309 9.75719 2.71856 10.5262C2.59015 10.6923\n             2.4715 10.8507 2.36302 11C2.4715 11.1492 2.59015 11.3077 2.71856 11.4737C3.31309 12.2427 3.98905 13.0121\n              4.73064 13.7273C6.78909 15.7126 8.93012 16.8839 11 16.8839C12.1486 16.8839 13.3192 16.5232 14.4854\n               15.8629ZM9.10002 10.4919C9.05657 10.6539 9.0334 10.8243 9.0334 11C9.0334 12.0832 9.91386 12.9613\n                11 12.9613C11.1761 12.9613 11.3469 12.9382 11.5094 12.8948L9.10002 10.4919ZM18.9626 14.8157L17.572\n                 13.4288C18.1956 12.8002 18.7687 12.1369 19.2813 11.4738C19.4097 11.3077 19.5284 11.1493 19.6369\n                  11C19.5284 10.8508 19.4097 10.6923 19.2813 10.5262C18.6868 9.75726 18.0109 8.98792 17.2693\n                   8.27267C15.2108 6.28736 13.0698 5.11608 10.9999 5.11608C10.4863 5.11608 9.96839 5.18819 9.44841\n                    5.32694L7.89288 3.77557C8.90807 3.37186 9.9449 3.15477 10.9999 3.15477C13.6819 3.15477 16.2464\n                     4.55772 18.6364 6.86278C19.4517 7.64917 20.1893 8.48872 20.8387 9.32862C21.2305 9.83544 21.5087\n                      10.2341 21.6611 10.4717L21.9999 11L21.6611 11.5284C21.5087 11.7659 21.2305 12.1646 20.8387\n                       12.6714C20.2771 13.3978 19.6494 14.124 18.9626 14.8157Z\"\n      fill=\"#D1CFD7\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n));\n","import React, { memo } from 'react';\nimport { BasicCheckMarkColorType } from './_types';\n\nconst colorTypes = {\n  disabledColor: '#D1CFD7',\n  activeColor: '#FFFFFF',\n  defaultColor: '#4E4E53',\n};\n\ntype PropsType = {\n  colorType?: BasicCheckMarkColorType;\n  width?: string;\n  height?: string;\n  viewBox?: string;\n};\n\nexport const BasicCheckMarkIcon = memo(\n  ({\n    colorType = 'defaultColor',\n    width = '24',\n    height = '24',\n    viewBox = '-4 -6 24 24',\n  }: PropsType) => (\n    <svg\n      fill=\"none\"\n      height={height}\n      viewBox={viewBox}\n      width={width}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        clipRule=\"evenodd\"\n        d=\"M5.70711 9.29289L15 0L16.4142 1.41421L5.70711 12.1213L0 6.41421L1.41421 5L5.70711 9.29289Z\"\n        fill={colorTypes[colorType]}\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  ),\n);\n","import React, { memo } from 'react';\nimport { BasicMinusColorType } from './_types/index';\n\nconst colorTypes = {\n  disabledColor: '#D1CFD7',\n  activeColor: '#FFFFFF',\n  defaultColor: '#4E4E53',\n};\n\ntype PropsType = {\n  colorType?: BasicMinusColorType;\n  width?: string;\n  height?: string;\n  viewBox?: string;\n};\n\nexport const BasicMinusIcon = memo(\n  ({\n    colorType = 'defaultColor',\n    width = '24',\n    height = '24',\n    viewBox = '-2 -11 24 24',\n  }: PropsType) => (\n    <svg\n      fill=\"none\"\n      height={height}\n      viewBox={viewBox}\n      width={width}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        clipRule=\"evenodd\"\n        d=\"M20 0V2H0V0H20Z\"\n        fill={colorTypes[colorType]}\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  ),\n);\n","import React, {\n  ComponentType,\n  FC,\n  memo,\n  ReactNode,\n  SyntheticEvent,\n  useEffect,\n} from 'react';\nimport classNames from 'classnames/bind';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './index.module.scss';\n\nconst cn = classNames.bind(styles);\n\ntype OverlayPropsType = {\n  /** флаг меняющий свойство position с fixed на absolute */\n  absolute?: boolean;\n  /** содержимое компонента */\n  children: FC | ComponentType | ReactNode;\n  /** флаг включающий наследование backgroundColor родительского компонента */\n  inherit?: boolean;\n  /** прозрачность оверлея */\n  opacity?: string;\n  /** коллбек клика по оверлею */\n  onClick?: (event: SyntheticEvent) => void;\n  /** флаг открытого состояния */\n  opened: boolean;\n  /** время анимации показа оверлея */\n  timeout?: number;\n  /** флаг меняющий backgroundColor на transparent */\n  transparent?: boolean;\n  /** флаг меняющий backgroundColor на белый */\n  whiteBackground?: boolean;\n  /** скругление оверлея для кнопки */\n  withBorderRadius?: boolean;\n  /** флаг отключения анимации закрытия оверлея */\n  isExitAnimationDisabled?: boolean;\n};\n\nconst DEFAULT_TIME_TO_SHOW_OVERLAY = 500;\nconst DEFAULT_OPACITY_VALUE = '0.7';\n\nexport const Overlay: FC<OverlayPropsType> = memo(\n  ({\n    absolute,\n    children,\n    inherit,\n    onClick = () => false,\n    opacity = DEFAULT_OPACITY_VALUE,\n    opened,\n    timeout = DEFAULT_TIME_TO_SHOW_OVERLAY,\n    transparent,\n    whiteBackground,\n    withBorderRadius,\n    isExitAnimationDisabled,\n  }: OverlayPropsType) => {\n    useEffect(() => {\n      document.documentElement.style.setProperty(\n        '--overlay-animation-duration',\n        `${timeout}ms`,\n      );\n      document.documentElement.style.setProperty('--overlay-opacity', opacity);\n    }, [opacity, timeout]);\n\n    return (\n      <CSSTransition\n        classNames={{\n          enter: cn('Overlay--enter'),\n          exit: cn(isExitAnimationDisabled ? '' : 'Overlay--exit'),\n        }}\n        in={opened}\n        timeout={timeout}\n        unmountOnExit\n      >\n        <div\n          className={cn('Overlay', {\n            'Overlay--inherit': inherit,\n            'Overlay--transparent': transparent,\n            'Overlay--whiteBackground': whiteBackground,\n            'Overlay--absolute': absolute,\n            'Overlay--curved': withBorderRadius,\n          })}\n          onClick={onClick}\n          role=\"presentation\"\n        >\n          {children}\n        </div>\n      </CSSTransition>\n    );\n  },\n);\n","import React, { FC, memo } from 'react';\nimport classnames from 'classnames/bind';\nimport styles from './index.module.scss';\nimport { SizeType, ColorType } from './_types';\n\nconst cn = classnames.bind(styles);\n\ntype PreloaderPropsType = {\n  /** type of color preloader */\n  color: ColorType;\n  /** type of size preloader */\n  size: SizeType;\n};\n\nexport const Preloader: FC<PreloaderPropsType> = memo(\n  ({ size, color }: PreloaderPropsType) => (\n    <div className={cn('Preloader')}>\n      <div\n        className={cn('Preloader__circular', {\n          [`Preloader__circular--${size}`]: Boolean(size),\n          [`Preloader__circular--${color}`]: Boolean(color),\n        })}\n      />\n    </div>\n  ),\n);\n","import { ButtonVariant, DarkThemePresets } from '../_types';\n\ntype ParamsType = {\n  variant?: ButtonVariant;\n  darkThemePreset?: DarkThemePresets;\n};\n\nexport const preloaderColor = ({ variant, darkThemePreset }: ParamsType) => {\n  if (variant) {\n    if (variant === 'main' || variant === 'accent') {\n      return 'white';\n    }\n    if (variant === 'interface') {\n      return 'rich-grey';\n    }\n    if (variant === 'remove') {\n      return 'red';\n    }\n  } else if (darkThemePreset) {\n    if (darkThemePreset === 'neutral') {\n      return 'grey';\n    }\n    if (darkThemePreset === 'negative') {\n      return 'red';\n    }\n    if (darkThemePreset === 'positive') {\n      return 'light-green';\n    }\n  }\n\n  return 'grey';\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Page\":\"Page-3ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Label-4Ga\",\"Label--required\":\"Label--required-13y\",\"Label--disabled\":\"Label--disabled-MRR\"};","import React, {\n  FC,\n  useCallback,\n  RefObject,\n  ComponentType,\n  FunctionComponent,\n  useMemo,\n  memo,\n  SyntheticEvent,\n} from 'react';\nimport classnames from 'classnames/bind';\nimport { Overlay } from '@/_components/overlay';\nimport { Preloader } from '@/_components/preloader';\nimport { FontSizeType } from '@/_components/text';\nimport styles from './index.module.scss';\nimport {\n  ButtonVariant,\n  ButtonSize,\n  ButtonType,\n  DarkThemePresets,\n  ButtonClickEventType,\n} from './_types';\nimport { preloaderColor } from './_utils/preloader-color';\nimport { getIcon } from './_utils/get-icon';\n\nexport * from './_types';\n\nconst cn = classnames.bind(styles);\nconst BUTTON_OVERLAY_TIMEOUT = 150;\n\ntype ButtonPropsType = {\n  /** реф на иконочную кнопку */\n  buttonRef?: RefObject<HTMLButtonElement>;\n  /** отображение иконки в кнопке */\n  children?: ComponentType<any> | FC<any> | FunctionComponent<any>;\n  /** кнопка в темном интерфейсе */\n  darkThemePreset?: DarkThemePresets;\n  /** флаг рабочего состояния кнопки */\n  disabled?: boolean;\n  /** флаг устанавливающий width: 100% */\n  fullWidth?: boolean;\n  /** флаг отображения процесса загрузки внутри кнопки */\n  isLoading?: boolean;\n  /** флаг, устанавливающий текст в центр */\n  isTextCenter?: boolean;\n  /** коллбек-обработчик клика по кнопке */\n  onClick?: (optionClickEvent: ButtonClickEventType) => void;\n  /** размер кнопки */\n  size?: ButtonSize;\n  /** содержание текста */\n  text?: string;\n  /** выбор заголовка в кнопке */\n  textSize?: FontSizeType;\n  /** флаг регистра текста в кнопке */\n  textUpperCase?: boolean;\n  /** функциональный тип кнопки */\n  type?: ButtonType;\n  /** степень важности кнопки */\n  variant?: ButtonVariant;\n  /** флаг отображения прелоадера в кнопке */\n  withLoader?: boolean;\n  /** флаг выбора иконки меню в adaptive варианте кнопки */\n  adaptiveMenu?: boolean;\n  /** флаг выбора иконки крестика в adaptive варианте кнопки */\n  adaptiveClose?: boolean;\n};\n\nconst allButtonVariants = [\n  'main',\n  'accent',\n  'interface',\n  'neutral',\n  'positive',\n  'negative',\n  'remove',\n];\n\nexport const Button: FC<ButtonPropsType> = memo(\n  ({\n    text,\n    type = 'button',\n    size,\n    onClick = () => false,\n    disabled,\n    variant,\n    textUpperCase,\n    isLoading,\n    withLoader,\n    children: Icon,\n    fullWidth,\n    darkThemePreset,\n    isTextCenter,\n    adaptiveMenu,\n    adaptiveClose,\n  }: ButtonPropsType) => {\n    const needPreloader = useMemo(\n      () => allButtonVariants.includes(variant || darkThemePreset || ''),\n      [variant, darkThemePreset],\n    );\n\n    const textNegative = useMemo(\n      () => darkThemePreset === 'negative' && size === 'small',\n      [darkThemePreset, size],\n    );\n\n    const textNeutral = useMemo(\n      () => darkThemePreset === 'neutral' && size === 'small',\n      [darkThemePreset, size],\n    );\n\n    const textPositive = useMemo(\n      () => darkThemePreset === 'positive' && size === 'small',\n      [darkThemePreset, size],\n    );\n\n    const getIconVariant = useMemo(\n      () => getIcon({ variant, adaptiveMenu, adaptiveClose, Icon }),\n      [variant, adaptiveMenu, adaptiveClose, Icon],\n    );\n\n    const handleButtonClick = useCallback(\n      (event: SyntheticEvent<HTMLButtonElement>) => {\n        if (type !== 'submit') {\n          event.stopPropagation();\n        }\n        if (!isLoading) {\n          onClick({ event });\n        }\n      },\n      [isLoading, onClick, type],\n    );\n\n    const preloaderColorCheck = useMemo(\n      () => preloaderColor({ variant, darkThemePreset }),\n      [variant, darkThemePreset],\n    );\n\n    const iconSingle = useMemo(\n      () => Icon && !text && !(variant === 'adaptive'),\n      [Icon, text, variant],\n    );\n\n    const buttonDarkVariant = useMemo(\n      () => Boolean(darkThemePreset) && size === 'small' && !variant,\n      [darkThemePreset, size, variant],\n    );\n\n    const iconNoVariantBig = useMemo(\n      () =>\n        Boolean(!text) &&\n        !Boolean(variant) &&\n        !Boolean(darkThemePreset) &&\n        size === 'big',\n      [text, variant, darkThemePreset, size],\n    );\n\n    const iconNoVariantSmall = useMemo(\n      () =>\n        Boolean(!text) &&\n        !Boolean(variant) &&\n        !Boolean(darkThemePreset) &&\n        size === 'small',\n      [text, variant, darkThemePreset, size],\n    );\n\n    const adaptiveIconClose = useMemo(\n      () => !text && variant === 'adaptive' && adaptiveClose,\n      [text, variant, adaptiveClose],\n    );\n\n    const adaptiveIconMenu = useMemo(\n      () => !text && variant === 'adaptive' && adaptiveMenu,\n      [text, variant, adaptiveMenu],\n    );\n\n    const buttonIconElementSingle = useMemo(\n      () =>\n        (Boolean(!text) && Boolean(variant)) ||\n        (Boolean(!text) && Boolean(darkThemePreset)),\n      [text, variant, darkThemePreset],\n    );\n\n    const buttonIconElementSingleNoVariant = useMemo(\n      () => Boolean(!text) && !Boolean(variant) && !Boolean(darkThemePreset),\n      [text, variant, darkThemePreset],\n    );\n\n    const buttonIconSmall = useMemo(() => Icon && size === 'small' && text, [\n      Icon,\n      size,\n      text,\n    ]);\n\n    return (\n      /* eslint-disable react/button-has-type */\n      <button\n        className={cn('Button', {\n          [`Button--${variant}`]: Boolean(variant) && !darkThemePreset,\n          [`Button--${size}`]: size && text,\n          'Button--single': iconSingle,\n          'Button--absolute': isLoading,\n          'Button--full-width': fullWidth,\n          'Button--align-center': isTextCenter,\n          [`Button--${darkThemePreset}`]: buttonDarkVariant,\n          'Button--add-small': size === 'small' && variant === 'add',\n          'Button--remove-small': size === 'small' && variant === 'remove',\n          'Button--main-small': size === 'small' && variant === 'main',\n          'Button--accent-small': size === 'small' && variant === 'accent',\n          'Button--interface-small':\n            size === 'small' && variant === 'interface',\n          'Button--disabled': disabled,\n          'Button--icon-no-variant-big': iconNoVariantBig,\n          'Button--icon-no-variant-small': iconNoVariantSmall,\n          'Button--adaptive-icon-close': adaptiveIconClose,\n          'Button--adaptive-icon-menu': adaptiveIconMenu,\n        })}\n        disabled={disabled}\n        onClick={handleButtonClick}\n        type={type}\n        /* eslint-enable react/button-has-type */\n      >\n        {Icon && (\n          <span\n            className={cn('Button__icon', {\n              'Button__icon--single': buttonIconElementSingle,\n              'Button__icon--single-no-variant': buttonIconElementSingleNoVariant,\n              'Button__icon--small': buttonIconSmall,\n              'Button__icon--single-adaptive': !text && variant === 'adaptive',\n            })}\n          >\n            {getIconVariant}\n          </span>\n        )}\n        <span\n          className={cn('Button__text', {\n            'Button__text--white': variant === 'main' || variant === 'accent',\n            'Button__text--dark': variant === 'interface' || variant === 'add',\n            'Button__text--interface-menu': variant === 'interface-menu',\n            'Button__text--accent-menu': variant === 'accent-menu',\n            'Button__text--success': variant === 'success',\n            'Button__text--negative': textNegative || variant === 'remove',\n            'Button__text--neutral': textNeutral,\n            'Button__text--positive': textPositive,\n            'Button__text--adaptive': variant === 'adaptive',\n            'Button__text--uppercase': textUpperCase,\n            'Button__text--loading-remove':\n              isLoading && withLoader && variant === 'remove',\n          })}\n        >\n          {text}\n        </span>\n        {withLoader && needPreloader && (\n          <Overlay\n            absolute\n            inherit\n            opened={Boolean(isLoading)}\n            timeout={BUTTON_OVERLAY_TIMEOUT}\n            withBorderRadius\n          >\n            <Preloader color={preloaderColorCheck} size=\"small\" />\n          </Overlay>\n        )}\n      </button>\n    );\n  },\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Overlay-3c2\",\"Overlay--absolute\":\"Overlay--absolute-1GN\",\"Overlay--whiteBackground\":\"Overlay--whiteBackground-2au\",\"Overlay--transparent\":\"Overlay--transparent-1ek\",\"Overlay--inherit\":\"Overlay--inherit-3Rm\",\"Overlay--enter\":\"Overlay--enter-LqE\",\"fadeInOverlay\":\"fadeInOverlay-3NK\",\"Overlay--exit\":\"Overlay--exit-12L\",\"fadeOutOverlay\":\"fadeOutOverlay-ToS\",\"Overlay--curved\":\"Overlay--curved-2M6\",\"fadeUp\":\"fadeUp-32R\",\"fadeInBubble\":\"fadeInBubble-3jD\",\"fadeOutBubble\":\"fadeOutBubble-hn8\",\"fadeInHeader\":\"fadeInHeader-3kQ\",\"fadeOutHeader\":\"fadeOutHeader-2VG\",\"rotateOpen\":\"rotateOpen-3d4\",\"rotateClose\":\"rotateClose-1Sp\",\"spin\":\"spin-2V_\",\"rotate\":\"rotate-1Wv\",\"dash\":\"dash-2Vz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader-WE6\",\"Preloader__circular\":\"Preloader__circular-1on\",\"spin\":\"spin-3ca\",\"Preloader__circular--small\":\"Preloader__circular--small-1E9\",\"Preloader__circular--medium\":\"Preloader__circular--medium-1v2\",\"Preloader__circular--large\":\"Preloader__circular--large-13g\",\"Preloader__circular--white\":\"Preloader__circular--white-3hi\",\"Preloader__circular--rich-grey\":\"Preloader__circular--rich-grey-1mo\",\"Preloader__circular--light-green\":\"Preloader__circular--light-green-1J3\",\"Preloader__circular--red\":\"Preloader__circular--red-l0_\",\"Preloader__circular--grey\":\"Preloader__circular--grey-1Ol\",\"Preloader__circular--dark-purple\":\"Preloader__circular--dark-purple-3xi\",\"fadeInOverlay\":\"fadeInOverlay-2PH\",\"fadeOutOverlay\":\"fadeOutOverlay-Ofe\",\"fadeUp\":\"fadeUp-3Uz\",\"fadeInBubble\":\"fadeInBubble-1sX\",\"fadeOutBubble\":\"fadeOutBubble-2Th\",\"fadeInHeader\":\"fadeInHeader-_8B\",\"fadeOutHeader\":\"fadeOutHeader-25P\",\"rotateOpen\":\"rotateOpen-3hz\",\"rotateClose\":\"rotateClose-26_\",\"rotate\":\"rotate-2oZ\",\"dash\":\"dash-2kc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button--main\":\"Button--main-1Jn\",\"Button--main-small\":\"Button--main-small-2dK\",\"Button--accent\":\"Button--accent-1y3\",\"Button--accent-small\":\"Button--accent-small-2nI\",\"Button--add\":\"Button--add-3n0\",\"Button--add-small\":\"Button--add-small-V2Z\",\"Button--remove\":\"Button--remove-uet\",\"Button--remove-small\":\"Button--remove-small-2x-\",\"Button--interface\":\"Button--interface-31R\",\"Button--interface-small\":\"Button--interface-small-1sH\",\"Button--neutral\":\"Button--neutral-2XJ\",\"Button--positive\":\"Button--positive-2o1\",\"Button--negative\":\"Button--negative-jbF\",\"Button\":\"Button-gqx\",\"Button--icon-no-variant-big\":\"Button--icon-no-variant-big-2zu\",\"Button--icon-no-variant-small\":\"Button--icon-no-variant-small-3pp\",\"Button--success\":\"Button--success-QbP\",\"Button--single\":\"Button--single-3eg\",\"Button--big\":\"Button--big-9AK\",\"Button--small\":\"Button--small-Z38\",\"Button--adaptive\":\"Button--adaptive-2ci\",\"Button--adaptive-icon-menu\":\"Button--adaptive-icon-menu-1Ma\",\"Button--adaptive-icon-close\":\"Button--adaptive-icon-close-2uB\",\"Button--interface-menu\":\"Button--interface-menu-2yp\",\"Button--accent-menu\":\"Button--accent-menu-10O\",\"Button--absolute\":\"Button--absolute-3Jv\",\"Button--full-width\":\"Button--full-width-3wa\",\"Button--align-center\":\"Button--align-center-3nG\",\"Button--disabled\":\"Button--disabled-R-K\",\"Button__icon\":\"Button__icon-1qj\",\"Button__icon--small\":\"Button__icon--small-2a5\",\"Button__icon--single\":\"Button__icon--single-1gF\",\"Button__icon--single-no-variant\":\"Button__icon--single-no-variant-1mZ\",\"Button__icon--single-adaptive\":\"Button__icon--single-adaptive-ooq\",\"Button__text\":\"Button__text-1F4\",\"Button__text--white\":\"Button__text--white-3S-\",\"Button__text--dark\":\"Button__text--dark-2rg\",\"Button__text--success\":\"Button__text--success-3_L\",\"Button__text--positive\":\"Button__text--positive-Qqg\",\"Button__text--neutral\":\"Button__text--neutral-1w8\",\"Button__text--negative\":\"Button__text--negative-22w\",\"Button__text--adaptive\":\"Button__text--adaptive-3oY\",\"Button__text--uppercase\":\"Button__text--uppercase-10S\",\"Button__text--interface-menu\":\"Button__text--interface-menu-26A\",\"Button__text--accent-menu\":\"Button__text--accent-menu-3ai\",\"Button__text--loading-remove\":\"Button__text--loading-remove-VJX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Simple-input\":\"Simple-input-59D\",\"Simple-input__field\":\"Simple-input__field-2JI\",\"Simple-input__field--disabled\":\"Simple-input__field--disabled-Ytk\",\"Simple-input__field--searching\":\"Simple-input__field--searching-2st\",\"Simple-input__field--error\":\"Simple-input__field--error-SYO\",\"Simple-input__field--readOnly\":\"Simple-input__field--readOnly-2G4\",\"Simple-input__field--dark-theme\":\"Simple-input__field--dark-theme-22x\",\"Simple-input__icon\":\"Simple-input__icon-Jjw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form-simple-input\":\"Form-simple-input-2Cm\",\"Form-simple-input--error\":\"Form-simple-input--error-3Oy\",\"Form-simple-input__label\":\"Form-simple-input__label-26C\",\"Form-simple-input__error\":\"Form-simple-input__error-Dzk\",\"Form-simple-input__badge\":\"Form-simple-input__badge-1Ed\"};","import React, { FC, memo, useMemo } from 'react';\nimport classNames from 'classnames/bind';\nimport style from './index.module.scss';\nimport { FontSizeType, FontColorType, TagType } from './_types';\n\nexport * from './_types';\n\nconst cn = classNames.bind(style);\n\ntype PropsType = {\n  /** text color */\n  color: FontColorType;\n  /** text wight flag */\n  isBold?: boolean;\n  /** text ellipsis flag */\n  isEllipsis?: boolean;\n  /** text case flag */\n  isUpperCase?: boolean;\n  /** text size type */\n  size: FontSizeType;\n  /** tag type */\n  tagType?: TagType;\n  /** text type */\n  text: string;\n};\n\nexport const Text: FC<PropsType> = memo(\n  ({\n    color,\n    isBold,\n    isUpperCase,\n    size,\n    tagType,\n    text,\n    isEllipsis,\n  }: PropsType) => {\n    const TagName = useMemo(() => tagType || 'span', [tagType]);\n\n    return (\n      <TagName\n        className={cn('Text', {\n          [`Text--${size}`]: Boolean(size),\n          [`Text--${color}`]: Boolean(color),\n          'Text--bold': isBold,\n          'Text--uppercase': isUpperCase,\n          'Text--ellipsis': isEllipsis,\n        })}\n      >\n        {text}\n      </TagName>\n    );\n  },\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Text\":\"Text-nJ5\",\"Text--h0\":\"Text--h0-3BR\",\"Text--h1\":\"Text--h1-5pi\",\"Text--h2\":\"Text--h2-2Uo\",\"Text--h3\":\"Text--h3-2_V\",\"Text--h4\":\"Text--h4-1vi\",\"Text--h5\":\"Text--h5-2pk\",\"Text--h6\":\"Text--h6-1z3\",\"Text--orange\":\"Text--orange-1S7\",\"Text--darkPurple\":\"Text--darkPurple-3dX\",\"Text--purple\":\"Text--purple-13O\",\"Text--superDuperLightPurple\":\"Text--superDuperLightPurple-2uE\",\"Text--superDuperLightGrey\":\"Text--superDuperLightGrey-y2E\",\"Text--red\":\"Text--red-3Vi\",\"Text--blue\":\"Text--blue-2Ov\",\"Text--pink\":\"Text--pink-6ZD\",\"Text--lightRed\":\"Text--lightRed-R4G\",\"Text--lightYellow\":\"Text--lightYellow-9yO\",\"Text--lightBlue\":\"Text--lightBlue-205\",\"Text--paleBlue\":\"Text--paleBlue-2Wz\",\"Text--black\":\"Text--black-qWY\",\"Text--richGrey\":\"Text--richGrey--nN\",\"Text--grey\":\"Text--grey-38S\",\"Text--lightGrey\":\"Text--lightGrey-1Em\",\"Text--white\":\"Text--white-894\",\"Text--yellow\":\"Text--yellow-2Go\",\"Text--successTextColor\":\"Text--successTextColor-269\",\"Text--bold\":\"Text--bold-3zR\",\"Text--uppercase\":\"Text--uppercase-Z85\",\"Text--ellipsis\":\"Text--ellipsis-24v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button-link-button--main\":\"Button-link-button--main-wGT\",\"Button-link-button--accent\":\"Button-link-button--accent-1dF\",\"Button-link-button--add\":\"Button-link-button--add-1UQ\",\"Button-link-button--remove\":\"Button-link-button--remove-E4b\",\"Button-link-button--interface\":\"Button-link-button--interface-so3\",\"Button-link-button--neutral\":\"Button-link-button--neutral-27J\",\"Button-link-button--positive\":\"Button-link-button--positive-1CA\",\"Button-link-button--negative\":\"Button-link-button--negative-3Kb\",\"Button-link-link\":\"Button-link-link-2F2\",\"Button-link-link__breadcrumbs\":\"Button-link-link__breadcrumbs-AHC\",\"Button-link-link__popup\":\"Button-link-link__popup-1bb\",\"Button-link-link--h0\":\"Button-link-link--h0-2no\",\"Button-link-link--h1\":\"Button-link-link--h1-28A\",\"Button-link-link--h2\":\"Button-link-link--h2-1rN\",\"Button-link-link--h3\":\"Button-link-link--h3-1_p\",\"Button-link-link--h4\":\"Button-link-link--h4-3Of\",\"Button-link-link--h5\":\"Button-link-link--h5-1nW\",\"Button-link-link--h6\":\"Button-link-link--h6-I0R\",\"Button-link-link--bold\":\"Button-link-link--bold-6qI\",\"Button-link-link--uppercase\":\"Button-link-link--uppercase-2In\",\"Button-link-button\":\"Button-link-button-2n2\",\"Button-link-button__icon\":\"Button-link-button__icon-2ij\",\"Button-link-button__icon--small\":\"Button-link-button__icon--small-IpA\",\"Button-link-button__icon--single\":\"Button-link-button__icon--single-1YK\",\"Button-link-button__text\":\"Button-link-button__text-2bn\",\"Button-link-button__text--white\":\"Button-link-button__text--white-ZZm\",\"Button-link-button__text--dark\":\"Button-link-button__text--dark-Zdp\",\"Button-link-button__text--success\":\"Button-link-button__text--success-16H\",\"Button-link-button__text--positive\":\"Button-link-button__text--positive-1kX\",\"Button-link-button__text--neutral\":\"Button-link-button__text--neutral-z6D\",\"Button-link-button__text--negative\":\"Button-link-button__text--negative-1-A\",\"Button-link-button__text--adaptive\":\"Button-link-button__text--adaptive-2fV\",\"Button-link-button__text--uppercase\":\"Button-link-button__text--uppercase-3Mu\",\"Button-link-button__text--interface-menu\":\"Button-link-button__text--interface-menu-2dI\",\"Button-link-button__text--accent-menu\":\"Button-link-button__text--accent-menu-fRl\",\"Button-link-button--success\":\"Button-link-button--success-1-B\",\"Button-link-button--adaptive\":\"Button-link-button--adaptive-1OA\",\"Button-link-button--single\":\"Button-link-button--single-1V9\",\"Button-link-button--big\":\"Button-link-button--big-1fd\",\"Button-link-button--with-icon-small\":\"Button-link-button--with-icon-small-3Bn\",\"Button-link-button--small\":\"Button-link-button--small-3RD\",\"Button-link-button--interface-menu\":\"Button-link-button--interface-menu-1Yl\",\"Button-link-button--accent-menu\":\"Button-link-button--accent-menu-m6z\",\"Button-link-button--absolute\":\"Button-link-button--absolute-3tZ\",\"Button-link-button--full-width\":\"Button-link-button--full-width-1GD\",\"Button-link-button--align-center\":\"Button-link-button--align-center-2Ns\",\"Button-link-button--disabled\":\"Button-link-button--disabled-33C\",\"Button-link-button--succes\":\"Button-link-button--succes-3Ci\",\"Button-link-button__icon--single-no-variant\":\"Button-link-button__icon--single-no-variant-3Yp\",\"Button-link-button--icon-no-variant-big\":\"Button-link-button--icon-no-variant-big-2ft\",\"Button-link-button--icon-no-variant-small\":\"Button-link-button--icon-no-variant-small-3kn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Checkbox\":\"Checkbox-5AY\",\"Checkbox__icon\":\"Checkbox__icon-aMF\",\"Checkbox__icon-indeterminate\":\"Checkbox__icon-indeterminate-cNx\",\"Checkbox--radio\":\"Checkbox--radio-3Fq\",\"Checkbox--focused\":\"Checkbox--focused-13a\",\"Checkbox--checked\":\"Checkbox--checked-Wwo\",\"Checkbox--orange\":\"Checkbox--orange-_DS\",\"Checkbox--blue\":\"Checkbox--blue--wG\",\"Checkbox--red\":\"Checkbox--red-b4A\",\"Checkbox--green\":\"Checkbox--green-3rS\",\"Checkbox--yellow\":\"Checkbox--yellow-1-t\",\"Checkbox--pink\":\"Checkbox--pink-2aJ\",\"Checkbox--oceanBlue\":\"Checkbox--oceanBlue-2KJ\",\"Checkbox--paleBlue\":\"Checkbox--paleBlue-2hm\",\"Checkbox--disabled\":\"Checkbox--disabled-3Tt\",\"Checkbox__input\":\"Checkbox__input-jji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toggle\":\"Toggle-tpr\",\"Toggle--focused\":\"Toggle--focused-3HR\",\"Toggle--checked\":\"Toggle--checked-Sdy\",\"Toggle--disabled\":\"Toggle--disabled-yt1\",\"Toggle__input\":\"Toggle__input-1gL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form-checkbox\":\"Form-checkbox-2-R\",\"Form-checkbox__block\":\"Form-checkbox__block-2UC\",\"Form-checkbox--error\":\"Form-checkbox--error-hDo\",\"Form-checkbox__label\":\"Form-checkbox__label-2uu\",\"Form-checkbox__error\":\"Form-checkbox__error-tXH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login-form-view\":\"Login-form-view-1zN\",\"Login-form-view__title\":\"Login-form-view__title-32P\",\"Login-form-view__field-wrapper\":\"Login-form-view__field-wrapper-1-n\",\"Login-form-view__button-wrapper\":\"Login-form-view__button-wrapper-1Kx\"};","import React from 'react';\nimport { BasicMenuColorType } from './_types';\n\nconst colorTypes = {\n  menuColor: '#FFFFFF',\n  defaultColor: '#4E4E53',\n};\n\ntype PropsType = {\n  colorType?: BasicMenuColorType;\n};\n\nexport const BasicMenuIcon = ({ colorType = 'defaultColor' }: PropsType) => (\n  <svg\n    fill=\"none\"\n    height=\"24\"\n    viewBox=\"-2 -5 24 24\"\n    width=\"24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      clipRule=\"evenodd\"\n      d=\"M20 2V0H0V2H20ZM20 6V8H0V6H20ZM20 12V14H0V12H20Z\"\n      fill={colorTypes[colorType]}\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);\n","import React, { memo } from 'react';\n\nexport const NavigationPlusIcon = memo(() => (\n  <svg\n    fill=\"none\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    width=\"16\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M8.75 1C8.75 0.447715 8.30229 0 7.75 0C7.19772 0 6.75 0.447715 6.75 1V6.75H1C0.447715 6.75 0 7.19771 0 7.75C0\n       8.30228 0.447715 8.75 1 8.75H6.75V14.5C6.75 15.0523\n        7.19772 15.5 7.75 15.5C8.30229 15.5 8.75 15.0523 8.75 14.5V8.75H14.5C15.0523 8.75 15.5 8.30229 15.5\n         7.75C15.5 7.19772 15.0523 6.75 14.5 6.75H8.75V1Z\"\n      fill=\"#4E4E53\"\n    />\n  </svg>\n));\n","import React, { memo } from 'react';\nimport { NavigationCloseMediumSmallerColorType } from './_types';\n\nconst colorTypes = {\n  menuColor: '#FFFFFF',\n  defaultColor: '#4E4E53',\n};\n\ntype PropsType = {\n  colorType?: NavigationCloseMediumSmallerColorType;\n};\n\nexport const NavigationCloseMediumSmallerIcon = memo(\n  ({ colorType = 'defaultColor' }: PropsType) => (\n    <svg\n      fill=\"none\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      width=\"16\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        clipRule=\"evenodd\"\n        d=\"M0.310753 1.99681C-0.101096 1.58496 -0.101097 0.917221 0.310751 0.505372L0.50662 0.309504C0.918468 -0.102345 1.58621 -0.102345 1.99805 0.309504L15.6923 14.0038C16.1042 14.4157 16.1042 15.0834 15.6923 15.4952L15.4965 15.6911C15.0846 16.103 14.4169 16.103 14.005 15.6911L0.310753 1.99681Z\"\n        fill={colorTypes[colorType]}\n        fillRule=\"evenodd\"\n      />\n      <path\n        clipRule=\"evenodd\"\n        d=\"M1.99619 15.6905C1.58434 16.1023 0.916603 16.1023 0.504754 15.6905L0.308886 15.4946C-0.102962 15.0828 -0.102962 14.415 0.308886 14.0032L14.0032 0.308887C14.415 -0.102962 15.0828 -0.102963 15.4946 0.308886L15.6905 0.504754C16.1023 0.916603 16.1023 1.58434 15.6905 1.99619L1.99619 15.6905Z\"\n        fill={colorTypes[colorType]}\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  ),\n);\n","import React, { FC, ComponentType, FunctionComponent } from 'react';\nimport {\n  NavigationPlusIcon,\n  NavigationCloseMediumSmallerIcon,\n  BasicMenuIcon,\n} from '@/_components/icons';\nimport { ButtonVariant } from '../_types';\n\ntype ParamsType = {\n  variant?: ButtonVariant;\n  adaptiveMenu?: boolean;\n  adaptiveClose?: boolean;\n  Icon?: ComponentType<any> | FC<any> | FunctionComponent<any>;\n};\n\nexport const getIcon = ({\n  variant,\n  adaptiveMenu,\n  adaptiveClose,\n  Icon,\n}: ParamsType) => {\n  if (variant === 'add') {\n    return <NavigationPlusIcon />;\n  }\n  if (variant === 'adaptive' && adaptiveMenu) {\n    return <BasicMenuIcon colorType=\"menuColor\" />;\n  }\n  if (variant === 'adaptive' && adaptiveClose) {\n    return <NavigationCloseMediumSmallerIcon colorType=\"menuColor\" />;\n  }\n  if (variant === 'adaptive' && !adaptiveMenu && !adaptiveClose) {\n    return '';\n  }\n\n  return Icon ? <Icon /> : '';\n};\n","import { Action, BaseAction } from '@wildberries/redux-core-modules';\nimport { LoginFormValuesType } from '../../_types';\n\nexport const LOGIN_ACTION_SAGA = 'login-module_LOGIN_ACTION_SAGA';\nexport const loginActionSaga: Action<LoginFormValuesType> = payload => ({\n  type: LOGIN_ACTION_SAGA,\n  payload,\n});\n\nexport const SET_EXTERNAL_LOGIN_ERRORS = 'login-module_SET_EXTERNAL_LOGIN_ERRORS';\nexport const setExternalErrorsLoginFormAction: Action<\n  Record<string, string>\n> = payload => ({\n  type: SET_EXTERNAL_LOGIN_ERRORS,\n  payload,\n});\n\nexport const REMOVE_EXTERNAL_LOGIN_ERRORS = 'login-module_REMOVE_EXTERNAL_LOGIN_ERRORS';\nexport const removeExternalErrorsLoginFormAction: BaseAction = () => ({\n  type: REMOVE_EXTERNAL_LOGIN_ERRORS,\n});\n\nexport const SET_LOADING_START = 'login-module_SET_LOADING_START';\nexport const setLoginFormStartLoadingAction: BaseAction = () => ({\n  type: SET_LOADING_START,\n});\n\nexport const SET_LOADING_STOP = 'login-module_SET_LOADING_STOP';\nexport const setLoginFormStopLoadingAction: BaseAction = () => ({\n  type: SET_LOADING_STOP,\n});\n","import Joi from '@hapi/joi';\n\nexport const responseSchema = Joi.object({\n  result: Joi.string().required(),\n});\n","import { IResponse, PureRestRequest } from '@mihanizm56/fetch-api';\nimport { makeRequestConfig, RequestParamsType } from './make-request-config';\n\nexport const loginRequest = (options: RequestParamsType): Promise<IResponse> =>\n  new PureRestRequest().postRequest(makeRequestConfig(options));\n","import { LOGIN_ENDPOINT } from '@/api/endpoints';\nimport { responseSchema } from './response-schema';\n\nexport type RequestParamsType = {\n  login: string;\n  password: string;\n};\n\nexport const makeRequestConfig = ({ login, password }: RequestParamsType) => ({\n  endpoint: LOGIN_ENDPOINT,\n  responseSchema,\n  body: {\n    login,\n    password,\n  },\n});\n","export const LOGIN_ENDPOINT = '/api/login';\n","export const LOGIN_FORM_FIELD_NAMES = {\n  login: 'login',\n  password: 'password',\n  oferta: 'oferta',\n};\n","import { LOGIN_FORM_FIELD_NAMES } from '@/pages/login/_constants';\n\nexport const getFilteredFormErrors = (errorsObject: Record<string, string>) =>\n  Object.keys(errorsObject).reduce((acc, errorFieldName) => {\n    if (errorFieldName in LOGIN_FORM_FIELD_NAMES) {\n      return { ...acc, [errorFieldName]: errorsObject[errorFieldName] };\n    }\n\n    return acc;\n  }, {});\n","import { put, call } from 'redux-saga/effects';\nimport { batchActions } from 'redux-batched-actions';\nimport { setModalAction } from '@wildberries/notifications';\nimport { LoginFormValuesType } from '@/pages/login/_types';\nimport { loginRequest } from '@/api/requests/login';\nimport {\n  removeExternalErrorsLoginFormAction,\n  setExternalErrorsLoginFormAction,\n  setLoginFormStartLoadingAction,\n  setLoginFormStopLoadingAction,\n} from '../actions';\nimport { getFilteredFormErrors } from './_utils/get-filtered-form-errors';\n\nexport function* loginWorkerSaga(formValues: LoginFormValuesType) {\n  try {\n    yield put(\n      batchActions([\n        removeExternalErrorsLoginFormAction(),\n        setLoginFormStartLoadingAction(),\n      ]),\n    );\n\n    const { error, errorText, additionalErrors } = yield call(\n      loginRequest,\n      formValues,\n    );\n\n    const filteredFormErrors = getFilteredFormErrors(additionalErrors);\n\n    if (error) {\n      if (Boolean(filteredFormErrors)) {\n        yield put(setExternalErrorsLoginFormAction(filteredFormErrors));\n      }\n\n      throw new Error(errorText);\n    }\n\n    yield put(\n      batchActions([\n        setModalAction({\n          status: 'success',\n          title: 'Вы залогинились!',\n        }),\n        setLoginFormStopLoadingAction(),\n      ]),\n    );\n  } catch (error) {\n    yield put(\n      batchActions([\n        setModalAction({\n          status: 'error',\n          title: 'Вы не залогинились!',\n          text: `Причина: ${error.message}`,\n        }),\n        setLoginFormStopLoadingAction(),\n      ]),\n    );\n  }\n}\n","import { take, fork } from 'redux-saga/effects';\nimport { LoginFormValuesType } from '@/pages/login/_types';\nimport { LOGIN_ACTION_SAGA } from '../actions';\nimport { loginWorkerSaga } from './login-worker-saga';\n\nexport const LOGIN_SAGA_NAME = 'sagas_LOGIN_SAGA_NAME';\n\nexport function* loginWatcherSaga() {\n  while (true) {\n    const { payload }: { payload: LoginFormValuesType } = yield take(\n      LOGIN_ACTION_SAGA,\n    );\n\n    yield fork(loginWorkerSaga, payload);\n  }\n}\n","import { LoginFormStorage } from './_types';\nimport {\n  SET_EXTERNAL_LOGIN_ERRORS,\n  REMOVE_EXTERNAL_LOGIN_ERRORS,\n  SET_LOADING_START,\n  SET_LOADING_STOP,\n} from './actions';\n\nexport const initialState: LoginFormStorage = {\n  externalErrors: {},\n  isLoading: false,\n};\n\nconst reducer = (state = initialState, { type, payload }): LoginFormStorage => {\n  switch (type) {\n    case SET_LOADING_START:\n      return { ...state, isLoading: true };\n    case SET_LOADING_STOP:\n      return { ...state, isLoading: false };\n    case SET_EXTERNAL_LOGIN_ERRORS:\n      return { ...state, externalErrors: payload };\n    case REMOVE_EXTERNAL_LOGIN_ERRORS:\n      return { ...state, externalErrors: initialState.externalErrors };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createSelector } from 'reselect';\nimport { LoginFormStorage, LoginFormStoragePart } from './_types';\nimport { initialState } from './reducer';\nimport { MODULE_REDUCER_NAME } from './constants';\n\nconst loginFormStorageSelector = (\n  store: LoginFormStoragePart,\n): LoginFormStorage => store[MODULE_REDUCER_NAME] || initialState;\n\nexport const loginFormExternalErrorsSelector = createSelector(\n  [loginFormStorageSelector],\n  ({ externalErrors }: LoginFormStorage) => externalErrors,\n);\n\nexport const loginFormIsLoadingSelector = createSelector(\n  [loginFormStorageSelector],\n  ({ isLoading }: LoginFormStorage) => isLoading,\n);\n\nexport const loginFormHasExternalErrorsSelector = createSelector(\n  [loginFormStorageSelector],\n  ({ externalErrors }: LoginFormStorage) =>\n    Object.keys(externalErrors).length > 0,\n);\n","export const MODULE_REDUCER_NAME = 'login-module_MODULE_REDUCER_NAME';\nexport const QUANTITY_MILLISECONDS = 1000;\n","type ParamsType = {\n  key: string;\n  object: Record<string, any>;\n};\n\nexport const getOmittedObject = ({\n  key,\n  object,\n}: ParamsType): Record<string, any> => {\n  const { [key]: omitted, ...rest } = object;\n\n  return rest;\n};\n","import React, { FC, memo } from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './index.module.scss';\n\nconst cn = classNames.bind(styles);\n\ntype LabelPropsType = {\n  children: string;\n  disabled?: boolean;\n  htmlFor: string;\n  required?: boolean;\n};\n\nexport const Label: FC<LabelPropsType> = memo(\n  ({ children, disabled, htmlFor, required }: LabelPropsType) => (\n    <label\n      className={cn('Label', {\n        'Label--required': required,\n        'Label--disabled': disabled,\n      })}\n      htmlFor={htmlFor}\n    >\n      {children}\n    </label>\n  ),\n);\n","export const keyCodes = {\n  ALT: 18,\n  BACKSPACE: 8,\n  CTRL: 17,\n  DELETE: 46,\n  DOWN: 40,\n  END: 35,\n  ENTER: 13,\n  ESCAPE: 27,\n  HOME: 36,\n  LEFT: 37,\n  RIGHT: 39,\n  SHIFT: 16,\n  SPACE: 32,\n  TAB: 9,\n  UP: 38,\n};\n","import React, {\n  memo,\n  useCallback,\n  KeyboardEvent,\n  FocusEvent,\n  SyntheticEvent,\n  useState,\n  useMemo,\n} from 'react';\nimport classNames from 'classnames/bind';\nimport { keyCodes } from '../../../_constants/key-codes';\nimport { NavigationZoomIcon } from '../../icons/navigation-zoom-icon';\nimport { NavigationEyeIcon } from '../../icons/navigation-eye-icon';\nimport { NavigationEyeNoIcon } from '../../icons/navigation-eye-no-icon';\nimport { Button } from '../../button';\nimport { ButtonClickEventType } from '../../button/_types';\nimport { SimpleInputPropsType } from './_types';\nimport styles from './index.module.scss';\n\nconst cn = classNames.bind(styles);\n\nexport const SimpleInput = memo(\n  ({\n    autoComplete,\n    disabled,\n    inputRef,\n    id,\n    isDarkTheme,\n    isError,\n    name,\n    onBlur = () => false,\n    onChange,\n    onClick = () => false,\n    onFocus = () => false,\n    onKeyPress = () => false,\n    placeholder,\n    readOnly,\n    type,\n    value,\n  }: SimpleInputPropsType) => {\n    const [isOpenEye, setIsOpenEye] = useState(true);\n\n    const isSearchIcon = useMemo(() => type === 'search', [type]);\n    const isPasswordIcon = useMemo(() => type === 'password', [type]);\n    const PasswordIcon = useMemo(\n      () => (isOpenEye ? NavigationEyeNoIcon : NavigationEyeIcon),\n      [isOpenEye],\n    );\n\n    const changeEyeIcons = useMemo(() => (isOpenEye ? 'password' : 'text'), [\n      isOpenEye,\n    ]);\n    const changeTypes = useMemo(\n      () => (isPasswordIcon ? changeEyeIcons : type),\n      [isPasswordIcon, changeEyeIcons, type],\n    );\n\n    const typeForButton = useMemo(() => isSearchIcon || isPasswordIcon, [\n      isSearchIcon,\n      isPasswordIcon,\n    ]);\n\n    const TargetIcon = isPasswordIcon ? PasswordIcon : NavigationZoomIcon;\n\n    const handleBlur = useCallback(\n      (event: FocusEvent<HTMLInputElement>) => {\n        const { value: blurValue } = event.currentTarget;\n\n        onBlur({ event, value: blurValue, name });\n      },\n      [name, onBlur],\n    );\n\n    const handleChange = useCallback(\n      (event: SyntheticEvent<HTMLInputElement>) => {\n        const { value: changeValue } = event.currentTarget;\n\n        onChange({ event, value: changeValue, name });\n      },\n      [name, onChange],\n    );\n\n    const handleClick = useCallback(\n      (event: SyntheticEvent<HTMLInputElement>) => {\n        const { value: clickValue } = event.currentTarget;\n\n        onClick({ event, value: clickValue, name });\n      },\n      [name, onClick],\n    );\n\n    const handleFocus = useCallback(\n      (event: FocusEvent<HTMLInputElement>) => {\n        const { value: focusValue } = event.currentTarget;\n\n        onFocus({ event, value: focusValue, name });\n      },\n      [name, onFocus],\n    );\n\n    const handleKeyPress = useCallback(\n      (event: KeyboardEvent<HTMLInputElement>) => {\n        const { currentTarget, keyCode, which } = event;\n        const { ENTER } = keyCodes;\n\n        if (keyCode === ENTER || which === ENTER) {\n          onClick({ event, value: currentTarget.value, name });\n        }\n\n        onKeyPress({ event, value: currentTarget.value, name });\n      },\n      [name, onClick, onKeyPress],\n    );\n\n    const handleIconClick = useCallback(\n      (event: ButtonClickEventType) => {\n        if (isPasswordIcon) {\n          setIsOpenEye(!isOpenEye);\n        }\n      },\n      [isPasswordIcon, isOpenEye],\n    );\n\n    return (\n      <div className={cn('Simple-input')}>\n        <input\n          ref={inputRef}\n          autoComplete={autoComplete}\n          className={cn('Simple-input__field', {\n            'Simple-input__field--disabled': disabled,\n            'Simple-input__field--searching': type === 'search',\n            'Simple-input__field--error': isError,\n            'Simple-input__field--readOnly': readOnly,\n            'Simple-input__field--dark-theme': isDarkTheme,\n          })}\n          disabled={disabled}\n          id={id}\n          name={name}\n          onBlur={handleBlur}\n          onChange={handleChange}\n          onClick={handleClick}\n          onFocus={handleFocus}\n          onKeyPress={handleKeyPress}\n          placeholder={placeholder}\n          readOnly={readOnly}\n          type={changeTypes}\n          value={value}\n        />\n\n        {typeForButton && (\n          <div className={cn('Simple-input__icon')}>\n            <Button onClick={handleIconClick} size=\"big\" type=\"button\">\n              {TargetIcon}\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n","import { getIsValueEmpty } from './get-is-value-empty';\n\nexport type GetIsErrorFieldParamsType<ValueType> = {\n  modified?: boolean;\n  validationErrorMessage?: string;\n  externalErrorMessage?: string;\n  value: ValueType;\n};\n\n// three possible error conditions\n// 1 - the field was used and it did not pass validation in the form\n// 2 - the field has not been used, but there is a value inside it and it does not pass validation\n// (case with reloading data into a form in a select when the form updates all modified fields when initialValues changes)\n// 3 - an external error has come to the field\nexport const getIsErrorField = <ValueType>({\n  modified,\n  validationErrorMessage,\n  externalErrorMessage,\n  value,\n}: GetIsErrorFieldParamsType<ValueType>): boolean => {\n  const isValueEmpty = getIsValueEmpty<ValueType>(value);\n\n  return (\n    (modified && Boolean(validationErrorMessage)) ||\n    (!isValueEmpty && !modified && Boolean(validationErrorMessage)) ||\n    Boolean(externalErrorMessage)\n  );\n};\n","export const getIsValueEmpty = <ValueType>(value: ValueType): boolean => {\n  if (typeof value === 'object') {\n    if (value instanceof Array) {\n      return value.length === 0;\n    }\n\n    return !Boolean(Object.keys(value).length);\n  }\n\n  return !Boolean(value);\n};\n","import React, {\n  FunctionComponent,\n  memo,\n  RefObject,\n  useCallback,\n  ComponentType,\n  useMemo,\n  FC,\n  FocusEvent,\n} from 'react';\nimport classNames from 'classnames/bind';\nimport { FieldRenderProps } from 'react-final-form';\nimport { Label } from '@/_components/label';\nimport { SimpleInput } from '../simple-input';\nimport {\n  SimpleInputBlurEventType,\n  SimpleInputClickEventType,\n  SimpleInputChangeEventType,\n  SimpleInputFocusEventType,\n  SimpleInputKeyPressEventType,\n} from '../simple-input/_types';\nimport { getIsErrorField } from '../_utils/get-is-error-field';\nimport styles from './index.module.scss';\n\nconst cn = classNames.bind(styles);\n\ntype FormSimpleInputPropsType = {\n  /** autocomplete */\n  autoComplete?: 'on' | 'off';\n  /** lock flag */\n  disabled?: boolean;\n  /** external error */\n  externalErrorMessage?: string;\n  /** id */\n  id: string;\n  /** ref link */\n  inputRef?: RefObject<HTMLInputElement>;\n  /** label for the form */\n  label?: string;\n  /** name */\n  name: string;\n  /** event click handlers */\n  onClick?: (optionClickEvent: SimpleInputClickEventType) => void;\n  /** event key press handlers */\n  onKeyPress?: (optionKeyPressEvent: SimpleInputKeyPressEventType) => void;\n  /** label with Icon */\n  labelBadgeIcon?: ComponentType | FC | FunctionComponent;\n  /** text of tooltip */\n  labelBadgeText?: FC | FunctionComponent;\n  /** placeholder */\n  placeholder?: string;\n  /** read only flag */\n  readOnly?: boolean;\n  /** required field flag */\n  required?: boolean;\n  /** dark theme flag */\n  isDarkTheme?: boolean;\n  /** input for rff(react-final-form) */\n  input: {\n    onBlur: (event: FocusEvent<HTMLInputElement>) => void;\n    onChange: (value: string) => void;\n    onFocus: (event: FocusEvent<HTMLInputElement>) => void;\n    name: string;\n    type?: string;\n    value: string;\n  } & any; // ToDo: fix problem not extends RFF type\n} & FieldRenderProps<string, HTMLInputElement>;\n\nexport const FormSimpleInput = memo(\n  ({\n    autoComplete,\n    disabled,\n    externalErrorMessage,\n    id,\n    input: { onBlur, onChange, onFocus, name, value, type = 'text' },\n    inputRef,\n    isDarkTheme,\n    label,\n    labelBadgeIcon: Icon,\n    labelBadgeText,\n    meta: { error: validationErrorMessage, modified },\n    onClick = () => false,\n    onKeyPress = () => false,\n    placeholder,\n    readOnly,\n    required,\n  }: FormSimpleInputPropsType) => {\n    // three possible error conditions\n    // 1 - the field was used and it did not pass validation in the form\n    // 2 - the field has not been used, but there is a value inside it and it does not pass validation\n    // (case with reloading data into a form in a select when the form updates all modified fields when initialValues changes)\n    // 3 - an external error has come to the field\n\n    const isError = useMemo(\n      () =>\n        getIsErrorField<string>({\n          validationErrorMessage,\n          externalErrorMessage,\n          value,\n          modified,\n        }),\n      [validationErrorMessage, externalErrorMessage, value, modified],\n    );\n\n    const errorTextValue = useMemo(() => {\n      if (isError) {\n        return externalErrorMessage || validationErrorMessage;\n      }\n\n      return '';\n    }, [isError, externalErrorMessage, validationErrorMessage]);\n\n    const handleBlur = useCallback(\n      ({ event }: SimpleInputBlurEventType) => {\n        onBlur(event);\n      },\n      [onBlur],\n    );\n\n    const handleChange = useCallback(\n      ({ value: changeValue }: SimpleInputChangeEventType) => {\n        onChange(changeValue);\n      },\n      [onChange],\n    );\n\n    const handleClick = useCallback(\n      (optionClickEvent: SimpleInputClickEventType) => {\n        onClick(optionClickEvent);\n      },\n      [onClick],\n    );\n\n    const handleFocus = useCallback(\n      ({ event }: SimpleInputFocusEventType) => {\n        onFocus(event);\n      },\n      [onFocus],\n    );\n\n    const handleKeyPress = useCallback(\n      (optionKeyPressEvent: SimpleInputKeyPressEventType) => {\n        onKeyPress(optionKeyPressEvent);\n      },\n      [onKeyPress],\n    );\n\n    return (\n      <div\n        className={cn('Form-simple-input', {\n          'Form-simple-input--error': isError,\n        })}\n      >\n        {label && (\n          <div className={cn('Form-simple-input__label')}>\n            <Label disabled={disabled} htmlFor={id} required={required}>\n              {label}\n            </Label>\n          </div>\n        )}\n\n        <SimpleInput\n          autoComplete={autoComplete}\n          disabled={disabled}\n          id={id}\n          // eslint-disable-next-line\n          // @ts-ignore\n          inputRef={inputRef}\n          isDarkTheme={isDarkTheme}\n          isError={isError}\n          name={name}\n          onBlur={handleBlur}\n          onChange={handleChange}\n          onClick={handleClick}\n          onFocus={handleFocus}\n          onKeyPress={handleKeyPress}\n          placeholder={placeholder}\n          readOnly={readOnly}\n          type={type}\n          value={value}\n        />\n\n        {isError && (\n          <span className={cn('Form-simple-input__error')}>\n            {errorTextValue}\n          </span>\n        )}\n      </div>\n    );\n  },\n);\n","export const COMPONENT_STYLE_NAME = 'Button-link';\n\nexport const BUTTON_OVERLAY_TIMEOUT = 150;\n\nexport const BUTTON_VARIANTS: { [key: string]: string } = {\n  accent: 'accent',\n  interface: 'interface',\n  main: 'main',\n  neutral: 'neutral',\n  positive: 'positive',\n  negative: 'negative',\n  remove: 'remove',\n};\n","import React, { useMemo, memo } from 'react';\nimport { ButtonVariant, DarkThemePresets } from '@/_components/button';\nimport { Preloader } from '../../../preloader';\nimport { Overlay } from '../../../overlay';\nimport { preloaderColor } from '../../../button/_utils/preloader-color';\nimport { BUTTON_OVERLAY_TIMEOUT } from '../../_constants';\n\ntype ButtonLoaderPropsType = {\n  darkThemePreset?: DarkThemePresets;\n  isLoading: boolean;\n  variant?: ButtonVariant;\n};\n\nexport const ButtonLoader = memo(\n  ({ darkThemePreset, isLoading, variant }: ButtonLoaderPropsType) => {\n    const preloaderColorCheck = useMemo(\n      () => preloaderColor({ variant, darkThemePreset }),\n      [variant, darkThemePreset],\n    );\n\n    return (\n      <Overlay\n        absolute\n        inherit\n        opened={isLoading}\n        timeout={BUTTON_OVERLAY_TIMEOUT}\n        withBorderRadius\n      >\n        <Preloader color={preloaderColorCheck} size=\"small\" />\n      </Overlay>\n    );\n  },\n);\n","import React, {\n  ComponentType,\n  FunctionComponent,\n  memo,\n  SyntheticEvent,\n  useMemo,\n} from 'react';\nimport classNames from 'classnames/bind';\nimport { ButtonVariant, DarkThemePresets } from '@/_components/button';\nimport { COMPONENT_STYLE_NAME } from '../../_constants';\nimport { ClassNameType, TagOptionalPropsType } from '../../_types';\nimport styles from '../../index.module.scss';\nimport { ButtonLoader } from '../button-loader';\n\nconst cn = classNames.bind(styles);\n\ntype ButtonLinkViewPropsType = {\n  darkThemePreset?: DarkThemePresets;\n  icon?: ComponentType | FunctionComponent;\n  isLoading?: boolean;\n  needPreloader: boolean;\n  onClick: (\n    event: SyntheticEvent<HTMLButtonElement | HTMLAnchorElement>,\n  ) => void;\n  routeName?: string;\n  styleButtonLink: ClassNameType;\n  styleButtonText: ClassNameType;\n  tagName: string;\n  tagOptionalProps: TagOptionalPropsType;\n  text?: string;\n  variant?: ButtonVariant;\n  withLoader?: boolean;\n};\n\nexport const ButtonLinkView = memo(\n  ({\n    darkThemePreset,\n    icon: Icon,\n    isLoading = false,\n    needPreloader,\n    onClick,\n    routeName,\n    styleButtonLink,\n    styleButtonText,\n    tagName: Tag,\n    tagOptionalProps,\n    text,\n    variant,\n    withLoader,\n  }: ButtonLinkViewPropsType) => {\n    const isShowLoader = useMemo(\n      () => !routeName && withLoader && needPreloader,\n      [routeName, withLoader, needPreloader],\n    );\n\n    return (\n      // eslint-disable-next-line\n      // @ts-ignore due to a different set of props the type can't be defined properly \n      <Tag\n        className={cn(styleButtonLink)}\n        onClick={onClick}\n        {...tagOptionalProps} // not a good practice!!!\n        // in this case props are generated by util and have a different field set\n        // it is impossible to transmit it in any other way\n      >\n        {!routeName && Icon && (\n          <div\n            className={cn(`${COMPONENT_STYLE_NAME}-button__icon`, {\n              [`${COMPONENT_STYLE_NAME}-button__icon--single`]: Boolean(!text),\n            })}\n          >\n            <Icon />\n          </div>\n        )}\n        {routeName ? text : <span className={cn(styleButtonText)}>{text}</span>}\n        {isShowLoader && (\n          <ButtonLoader\n            darkThemePreset={darkThemePreset}\n            isLoading={isLoading}\n            variant={variant}\n          />\n        )}\n      </Tag>\n    );\n  },\n);\n","import React, { RefObject, SyntheticEvent, useCallback, useMemo } from 'react';\nimport { ButtonType } from '@/_components/button';\nimport { ButtonLinkView } from './_components/button-link-view';\nimport { getButtonLinkClassNames } from './_utils/get-button-link-class-names';\nimport { getButtonTextClassNames } from './_utils/get-button-text-class-names';\nimport { getTagProps } from './_utils/get-tag-props';\nimport { BUTTON_VARIANTS } from './_constants';\nimport { ButtonClickEventType, BasePropsType } from './_types';\n\nexport type ButtonLinkPropsType = BasePropsType & {\n  /** реф на иконочную кнопку */\n  buttonRef?: RefObject<HTMLButtonElement>;\n  /** флаг рабочего состояния кнопки */\n  disabled?: boolean;\n  /** коллбек-обработчик клика по кнопке */\n  onClick?: (buttonEvent: ButtonClickEventType) => void;\n  /** функциональный тип кнопки */\n  type?: ButtonType;\n  /** флаг отображения прелоадера в кнопке */\n  withLoader?: boolean;\n};\n\nexport const ButtonLink = ({\n  children,\n  darkThemePreset,\n  disabled,\n  fullWidth,\n  isBold,\n  isBreadcrumbs,\n  isLoading,\n  isPopUp,\n  isTextCenter,\n  onClick = () => false,\n  routeName,\n  size,\n  text,\n  textSize = 'h4',\n  textUpperCase,\n  type = 'button',\n  variant,\n  withLoader,\n}: ButtonLinkPropsType) => {\n  const needPreloader = useMemo(\n    () => Boolean(BUTTON_VARIANTS[variant || darkThemePreset || '']),\n    [variant, darkThemePreset],\n  );\n\n  const styleButtonLink = useMemo(\n    () =>\n      getButtonLinkClassNames({\n        routeName,\n        isBreadcrumbs,\n        isPopUp,\n        textSize,\n        isBold,\n        textUpperCase,\n        variant,\n        darkThemePreset,\n        size,\n        text,\n        children,\n        isLoading,\n        fullWidth,\n        isTextCenter,\n        disabled,\n      }),\n    [\n      routeName,\n      isBreadcrumbs,\n      isPopUp,\n      textSize,\n      isBold,\n      textUpperCase,\n      variant,\n      darkThemePreset,\n      size,\n      text,\n      children,\n      isLoading,\n      fullWidth,\n      isTextCenter,\n      disabled,\n    ],\n  );\n\n  const styleButtonText = useMemo(\n    () =>\n      getButtonTextClassNames({\n        textUpperCase,\n        variant,\n        darkThemePreset,\n        size,\n      }),\n    [textUpperCase, variant, darkThemePreset, size],\n  );\n\n  const handleClick = useCallback(\n    (event: SyntheticEvent<HTMLButtonElement | HTMLAnchorElement>) => {\n      if (type !== 'submit' && !routeName) {\n        event.preventDefault();\n      }\n      onClick({ event });\n    },\n    [routeName, onClick, type],\n  );\n\n  const tagOptionalProps = useMemo(\n    () => getTagProps({ disabled, routeName, type }),\n    [disabled, routeName, type],\n  );\n\n  const Tag: string = useMemo(() => (routeName ? 'a' : 'button'), [routeName]);\n\n  return (\n    <ButtonLinkView\n      darkThemePreset={darkThemePreset}\n      icon={children}\n      isLoading={isLoading}\n      needPreloader={needPreloader}\n      onClick={handleClick}\n      routeName={routeName}\n      styleButtonLink={styleButtonLink}\n      styleButtonText={styleButtonText}\n      tagName={Tag}\n      tagOptionalProps={tagOptionalProps}\n      text={text}\n      variant={variant}\n      withLoader={withLoader}\n    />\n  );\n};\n","import { BasePropsType, ClassNameType } from '../_types';\nimport { COMPONENT_STYLE_NAME } from '../_constants';\n\nexport const getButtonLinkClassNames = ({\n  disabled,\n  routeName,\n  isBreadcrumbs,\n  isPopUp,\n  textSize,\n  isBold,\n  textUpperCase,\n  variant,\n  darkThemePreset,\n  size,\n  text,\n  children: Icon,\n  isLoading,\n  fullWidth,\n  isTextCenter,\n}: BasePropsType): ClassNameType =>\n  (routeName\n    ? {\n        [`${COMPONENT_STYLE_NAME}-link`]: true,\n        [`${COMPONENT_STYLE_NAME}-link__breadcrumbs`]: isBreadcrumbs,\n        [`${COMPONENT_STYLE_NAME}-link__popup`]: isPopUp,\n        [`${COMPONENT_STYLE_NAME}-link--${textSize}`]: Boolean(textSize),\n        [`${COMPONENT_STYLE_NAME}-link--bold`]: isBold,\n        [`${COMPONENT_STYLE_NAME}-link--uppercase`]: textUpperCase,\n      }\n    : {\n        [`${COMPONENT_STYLE_NAME}-button`]: true,\n        [`${COMPONENT_STYLE_NAME}-button--disabled`]: disabled,\n        [`${COMPONENT_STYLE_NAME}-button--${variant}`]:\n          variant && !darkThemePreset,\n        [`${COMPONENT_STYLE_NAME}-button--${size}`]:\n          size && text && !Boolean(Icon),\n        [`${COMPONENT_STYLE_NAME}-button--with-icon-small`]:\n          size === 'small' && text && Boolean(Icon),\n        [`${COMPONENT_STYLE_NAME}-button--single`]: Icon && !text,\n        [`${COMPONENT_STYLE_NAME}-button--absolute`]: isLoading,\n        [`${COMPONENT_STYLE_NAME}-button--full-width`]: fullWidth,\n        [`${COMPONENT_STYLE_NAME}-button--align-center`]: isTextCenter,\n        [`${COMPONENT_STYLE_NAME}--${darkThemePreset}`]:\n          darkThemePreset && size === 'small' && !variant,\n      }) as ClassNameType; // the return value types are not correctly defined\n","import {\n  ButtonSize,\n  ButtonVariant,\n  DarkThemePresets,\n} from '@/_components/button';\nimport { ClassNameType } from '../_types';\nimport { COMPONENT_STYLE_NAME } from '../_constants';\n\ntype ParamsType = {\n  textUpperCase?: boolean;\n  darkThemePreset?: DarkThemePresets;\n  size?: ButtonSize;\n  variant?: ButtonVariant;\n};\nexport const getButtonTextClassNames = ({\n  textUpperCase,\n  darkThemePreset,\n  size,\n  variant,\n}: ParamsType): ClassNameType =>\n  ({\n    [`${COMPONENT_STYLE_NAME}-button__text`]: true,\n    [`${COMPONENT_STYLE_NAME}-button__text--white`]:\n      variant === 'main' || variant === 'accent',\n    [`${COMPONENT_STYLE_NAME}-button__text--dark`]:\n      variant === 'interface' || variant === 'add',\n    [`${COMPONENT_STYLE_NAME}-button__text--interface-menu`]:\n      variant === 'interface-menu',\n    [`${COMPONENT_STYLE_NAME}-button__text--accent-menu`]:\n      variant === 'accent-menu',\n    [`${COMPONENT_STYLE_NAME}-button__text--success`]: variant === 'success',\n    [`${COMPONENT_STYLE_NAME}-button__text--negative`]:\n      (darkThemePreset === 'negative' && size === 'small') ||\n      variant === 'remove',\n    [`${COMPONENT_STYLE_NAME}-button__text--neutral`]:\n      darkThemePreset === 'neutral' && size === 'small',\n    [`${COMPONENT_STYLE_NAME}-button__text--positive`]:\n      darkThemePreset === 'positive' && size === 'small',\n    [`${COMPONENT_STYLE_NAME}-button__text--adaptive`]: variant === 'adaptive',\n    [`${COMPONENT_STYLE_NAME}-button__text--uppercase`]: textUpperCase,\n  } as ClassNameType); // the return value types are not correctly defined\n","import { TagOptionalPropsType } from '../_types';\n\ntype ParamsType = {\n  routeName?: string;\n  disabled?: boolean;\n  type?: string;\n};\n\nexport const getTagProps = ({\n  routeName,\n  disabled,\n  type,\n}: ParamsType): TagOptionalPropsType =>\n  // creating different props for different HTML tags in order to get a valid markup\n  // there can't be 'href' attribute in the 'button' tag\n  // there can't be 'disabled' and 'type' attributes in the 'a' tag\n  routeName ? { href: routeName } : { disabled, type };\n","import React, {\n  useState,\n  KeyboardEvent,\n  ChangeEvent,\n  useCallback,\n  useMemo,\n  memo,\n  SyntheticEvent,\n} from 'react';\nimport classNames from 'classnames/bind';\nimport { keyCodes } from '@/_constants/key-codes';\nimport { BasicCheckMarkIcon } from '../icons/basic-check-mark-icon';\nimport { BasicMinusIcon } from '../icons/basic-minus-icon';\nimport { CheckboxProps } from './_types';\nimport forCheckboxStyle from './checkbox.module.scss';\nimport forToggleStyle from './toggle.module.scss';\n\nconst checkboxClassNames = classNames.bind(forCheckboxStyle);\nconst toggleClassNames = classNames.bind(forToggleStyle);\n\nconst { ENTER, SPACE } = keyCodes;\nconst targetClickKey = [ENTER, SPACE];\n\nexport const Checkbox = memo(\n  ({\n    disabled,\n    indeterminate,\n    id,\n    name,\n    onChange = () => false,\n    onKeyPress = () => false,\n    onClick = () => false,\n    checkboxRef,\n    radio,\n    toggle,\n    color = 'orange',\n    checked = false,\n  }: CheckboxProps) => {\n    const [isActive, setIsActive] = useState(false);\n\n    const setActive = useCallback(() => {\n      setIsActive(true);\n    }, []);\n\n    const checkboxStyle = useMemo(\n      () =>\n        checkboxClassNames('Checkbox', {\n          'Checkbox--checked': checked,\n          'Checkbox--disabled': disabled,\n          'Checkbox--focused': isActive,\n          'Checkbox--radio': radio,\n          [`Checkbox--${color}`]: Boolean(color),\n        }),\n      [checked, disabled, isActive, radio, color],\n    );\n\n    const toggleStyle = useMemo(\n      () =>\n        toggleClassNames('Toggle', {\n          'Toggle--checked': checked,\n          'Toggle--disabled': disabled,\n          'Toggle--focused': isActive,\n        }),\n      [checked, disabled, isActive],\n    );\n\n    const inputClasses = useMemo(\n      () =>\n        toggle\n          ? toggleClassNames('Toggle__input')\n          : checkboxClassNames('Checkbox__input'),\n      [toggle],\n    );\n\n    const inputType = useMemo(() => (radio ? 'radio' : 'checkbox'), [radio]);\n\n    const hasIcon = useMemo(() => !toggle && checked, [toggle, checked]);\n\n    const handleBlur = useCallback(() => setIsActive(false), []);\n\n    const handleChange = useCallback(\n      (event: ChangeEvent<HTMLInputElement>) => {\n        const { checked: changeChecked } = event.currentTarget;\n\n        if (!disabled) {\n          onChange({ event, value: changeChecked, name });\n        }\n      },\n      [disabled, name, onChange],\n    );\n\n    const handleKeyPress = useCallback(\n      (event: KeyboardEvent<HTMLInputElement>) => {\n        const { charCode } = event;\n        if (targetClickKey.includes(charCode)) {\n          onKeyPress({ event });\n        }\n      },\n      [onKeyPress],\n    );\n\n    const handleClickInput = useCallback(\n      (event: SyntheticEvent<HTMLInputElement>) => {\n        event.stopPropagation();\n        onClick({ event });\n      },\n      [onClick],\n    );\n\n    const handleClickLabel = useCallback(\n      (event: SyntheticEvent<HTMLLabelElement>) => {\n        event.stopPropagation();\n      },\n      [],\n    );\n\n    return (\n      // jsx-ally not checked interactive label from htmlFor attribute\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n      <label\n        className={toggle ? toggleStyle : checkboxStyle}\n        htmlFor={id}\n        onClick={handleClickLabel}\n        onFocus={setActive}\n      >\n        <input\n          ref={checkboxRef}\n          checked={checked}\n          className={inputClasses}\n          disabled={disabled}\n          id={id}\n          name={name}\n          onBlur={handleBlur}\n          onChange={handleChange}\n          onClick={handleClickInput}\n          onKeyPress={handleKeyPress}\n          type={inputType}\n        />\n        {hasIcon && radio && (\n          <span className={checkboxClassNames('Checkbox__icon')}>\n            {indeterminate && (\n              <span\n                className={checkboxClassNames('Checkbox__icon-indeterminate')}\n              />\n            )}\n          </span>\n        )}\n\n        {hasIcon && (\n          <span className={checkboxClassNames('Checkbox__icon')}>\n            {indeterminate ? (\n              <BasicMinusIcon\n                colorType={disabled ? 'disabledColor' : 'activeColor'}\n                height=\"10\"\n                viewBox=\"0 0 12 2\"\n                width=\"10\"\n              />\n            ) : (\n              <BasicCheckMarkIcon\n                colorType={disabled ? 'disabledColor' : 'activeColor'}\n                height=\"10\"\n                viewBox=\"0 0 15 13\"\n                width=\"13\"\n              />\n            )}\n          </span>\n        )}\n      </label>\n    );\n  },\n);\n","import React, {\n  memo,\n  RefObject,\n  useCallback,\n  useMemo,\n  FocusEvent,\n} from 'react';\nimport classNames from 'classnames/bind';\nimport { FieldRenderProps } from 'react-final-form';\nimport { Checkbox } from '@/_components/checkbox';\nimport {\n  CheckboxChangeEventType,\n  CheckboxClickEventType,\n} from '../checkbox/_types';\nimport { Label } from '../label';\nimport styles from './index.module.scss';\n\nconst cn = classNames.bind(styles);\n\ntype FormCheckboxProps = {\n  /** flag when checked */\n  checked?: boolean;\n  /** ref link */\n  checkboxRef?: RefObject<HTMLInputElement>;\n  /** choice of background color for checkbox */\n  color?: string;\n  /** lock flag */\n  disabled?: boolean;\n  /** input id */\n  id: string;\n  /** input for rff */\n  input: {\n    onBlur: (event: FocusEvent<HTMLInputElement>) => void;\n    onChange?: (value: boolean) => void;\n    onFocus: (event: FocusEvent<HTMLInputElement>) => void;\n    name: string;\n    value: boolean;\n  } & any; // ToDo: fix problem not extends RFF type\n  /** indeterminate state flag */\n  indeterminate?: boolean;\n  onClick?: (optionClickEvent: CheckboxClickEventType) => void;\n  /** radio type flag */\n  radio?: boolean;\n  /** switch type flag */\n  toggle?: boolean;\n  label?: string;\n  required?: boolean;\n  externalErrorMessage?: string;\n} & FieldRenderProps<boolean, HTMLInputElement>;\n\nexport const FormCheckbox = memo(\n  ({\n    id,\n    input: { onChange, checked, name },\n    label,\n    required,\n    toggle,\n    disabled,\n    onClick,\n    indeterminate,\n    color,\n    externalErrorMessage,\n    meta: { error: validationErrorMessage, modified },\n    checkboxRef,\n  }: FormCheckboxProps) => {\n    const isError = useMemo(\n      () =>\n        (modified && Boolean(validationErrorMessage)) ||\n        (Boolean(checked) && !modified && Boolean(validationErrorMessage)) ||\n        Boolean(externalErrorMessage),\n      [validationErrorMessage, externalErrorMessage, checked, modified],\n    );\n\n    const handleChangeFormCheckbox = useCallback(\n      ({ value: changeValue }: CheckboxChangeEventType) => {\n        onChange(changeValue);\n      },\n      [onChange],\n    );\n\n    const errorTextValue = useMemo(() => {\n      if (isError) {\n        return externalErrorMessage || validationErrorMessage;\n      }\n\n      return '';\n    }, [isError, externalErrorMessage, validationErrorMessage]);\n\n    return (\n      <div\n        className={cn('Form-checkbox', {\n          'Form-checkbox--error': isError,\n        })}\n      >\n        <div className={cn('Form-checkbox__block')}>\n          <Checkbox\n            checkboxRef={checkboxRef}\n            checked={checked}\n            color={color}\n            disabled={disabled}\n            id={id}\n            indeterminate={indeterminate}\n            name={name}\n            onChange={handleChangeFormCheckbox}\n            onClick={onClick}\n            toggle={toggle}\n          />\n\n          {label && (\n            <div className={cn('Form-checkbox__label')}>\n              <Label htmlFor={id} required={required}>\n                {label}\n              </Label>\n            </div>\n          )}\n        </div>\n\n        {isError && (\n          <span className={cn('Form-checkbox__error')}>{errorTextValue}</span>\n        )}\n      </div>\n    );\n  },\n);\n","import React, { memo } from 'react';\nimport classnames from 'classnames/bind';\nimport { Field, Form } from 'react-final-form';\nimport { ChangeFieldHandler } from '@mihanizm56/react-final-form-utils';\nimport { LoginFormValuesType } from '@/pages/login/_types';\nimport { FormSimpleInput } from '@/_components/inputs/form-simple-input';\nimport { Text } from '@/_components/text';\nimport { ButtonLink } from '@/_components/button-link';\nimport { FormCheckbox } from '@/_components/form-checkbox';\nimport { ChangeFormFieldValuesType } from '../../_types';\nimport styles from './index.module.scss';\n\nconst cn = classnames.bind(styles);\n\nconst BLOCK_NAME = 'Login-form-view';\n\ntype PropsType = {\n  changeFormField: ChangeFormFieldValuesType;\n  isLoading: boolean;\n  submitLoginForm: (values: LoginFormValuesType) => void;\n  externalErrors: Record<string, string>;\n  formValidations: Record<string, any>;\n  loginFormHasExternalErrors: boolean;\n};\n\nexport const LoginFormView = memo(\n  ({\n    submitLoginForm,\n    changeFormField,\n    isLoading,\n    externalErrors,\n    formValidations,\n    loginFormHasExternalErrors,\n  }: PropsType) => {\n    return (\n      <div className={cn(`${BLOCK_NAME}`)}>\n        <Form\n          onSubmit={submitLoginForm}\n          render={({ handleSubmit, form, invalid }) => (\n            <form onSubmit={handleSubmit}>\n              <div className={cn(`${BLOCK_NAME}__title`)}>\n                <Text color=\"black\" size=\"h1\" text=\"Форма входа\" />\n              </div>\n              <div className={cn(`${BLOCK_NAME}__field-wrapper`)}>\n                <Field\n                  autoComplete=\"on\"\n                  component={FormSimpleInput}\n                  externalErrorMessage={externalErrors.login}\n                  label=\"Логин\"\n                  name=\"login\"\n                  placeholder=\"Введите ваш логин\"\n                  readOnly={isLoading}\n                  required\n                  validate={formValidations.login}\n                />\n                <ChangeFieldHandler name=\"login\">\n                  {({ name, value }) => {\n                    changeFormField({ name, value });\n                  }}\n                </ChangeFieldHandler>\n              </div>\n              <div className={cn(`${BLOCK_NAME}__field-wrapper`)}>\n                <Field\n                  autoComplete=\"on\"\n                  component={FormSimpleInput}\n                  externalErrorMessage={externalErrors.password}\n                  label=\"Пароль\"\n                  name=\"password\"\n                  placeholder=\"Введите ваш пароль\"\n                  readOnly={isLoading}\n                  required\n                  type=\"password\"\n                  validate={formValidations.password}\n                />\n                <ChangeFieldHandler name=\"password\">\n                  {({ name, value }) => {\n                    changeFormField({ name, value });\n                  }}\n                </ChangeFieldHandler>\n              </div>\n              <div className={cn(`${BLOCK_NAME}__field-wrapper`)}>\n                <Field\n                  component={FormCheckbox}\n                  disabled={isLoading}\n                  label=\"Согласен с условиями оферты\"\n                  name=\"oferta\"\n                  required\n                  type=\"checkbox\"\n                  validate={formValidations.oferta}\n                />\n                <ChangeFieldHandler name=\"password\">\n                  {({ name, value }) => {\n                    changeFormField({ name, value });\n                  }}\n                </ChangeFieldHandler>\n              </div>\n\n              <div className={cn(`${BLOCK_NAME}__button-wrapper`)}>\n                <ButtonLink\n                  disabled={isLoading || loginFormHasExternalErrors || invalid}\n                  fullWidth\n                  isLoading={isLoading}\n                  isTextCenter\n                  size=\"big\"\n                  text=\"Войти\"\n                  textUpperCase\n                  type=\"submit\"\n                  variant=\"main\"\n                  withLoader\n                />\n              </div>\n            </form>\n          )}\n          subscription={{ invalid: true, errors: true }}\n        />\n      </div>\n    );\n  },\n);\n","import { SimpleValidator, composeValidators } from '@wildberries/validators';\n\nconst simpleFieldValidator = new SimpleValidator();\n// const patternFieldValidator = new PatternValidator();\n\nexport const FORM_VALIDATIONS_CONFIG = {\n  login: composeValidators([\n    simpleFieldValidator.requiredValidator('Поле обязательно к заполнению'),\n    simpleFieldValidator.minLenghtValidate(\n      3,\n      'Логин должен содержать минимум 3 символа',\n    ),\n    simpleFieldValidator.maxLenghtValidate(\n      22,\n      'Логин должен содержать не более 22 символов',\n    ),\n  ]),\n  password: composeValidators([\n    simpleFieldValidator.requiredValidator('Поле обязательно к заполнению'),\n    simpleFieldValidator.minLenghtValidate(\n      6,\n      'Пароль должен содержать минимум 6 символов',\n    ),\n    simpleFieldValidator.maxLenghtValidate(\n      20,\n      'Пароль должен содержать не более 20 символов',\n    ),\n  ]),\n  oferta: composeValidators([\n    simpleFieldValidator.requiredValidator('Необходимо подтвердить согласие'),\n  ]),\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  loginActionSaga,\n  loginFormExternalErrorsSelector,\n  loginFormHasExternalErrorsSelector,\n  loginFormIsLoadingSelector,\n  setExternalErrorsLoginFormAction,\n} from '@/pages/login/_redux/login-module';\nimport { LoginFormValuesType } from '@/pages/login/_types';\nimport { getOmittedObject } from '@/_utils/omit';\nimport { LoginFormView } from './_components/login-form-view';\nimport { ChangeFormFieldValuesType } from './_types';\nimport { FORM_VALIDATIONS_CONFIG } from './_utils/form-validations-config';\n\ntype PropsType = {\n  loginFormExternalErrors: Record<string, string>;\n  loginFormIsLoading: boolean;\n  login: typeof loginActionSaga;\n  loginFormHasExternalErrors: boolean;\n  setExternalErrors: typeof setExternalErrorsLoginFormAction;\n};\n\nclass WrappedContainer extends Component<PropsType> {\n  handleSubmitForm = (values: LoginFormValuesType) => {\n    this.props.login(values);\n  };\n\n  handleChangeField: ChangeFormFieldValuesType = ({ name }) => {\n    if (this.props.loginFormExternalErrors[name]) {\n      this.handleChangeFormErrors({ name });\n    }\n  };\n\n  handleChangeFormErrors = ({ name }: { name: string }) => {\n    const newExternalErrors = getOmittedObject({\n      key: name,\n      object: this.props.loginFormExternalErrors,\n    });\n\n    this.props.setExternalErrors(newExternalErrors);\n  };\n\n  render() {\n    return (\n      <LoginFormView\n        changeFormField={this.handleChangeField}\n        externalErrors={this.props.loginFormExternalErrors}\n        formValidations={FORM_VALIDATIONS_CONFIG}\n        isLoading={this.props.loginFormIsLoading}\n        loginFormHasExternalErrors={this.props.loginFormHasExternalErrors}\n        submitLoginForm={this.handleSubmitForm}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loginFormExternalErrors: loginFormExternalErrorsSelector(state),\n  loginFormIsLoading: loginFormIsLoadingSelector(state),\n  loginFormHasExternalErrors: loginFormHasExternalErrorsSelector(state),\n});\n\nconst mapDispatchToProps = {\n  login: loginActionSaga,\n  setExternalErrors: setExternalErrorsLoginFormAction,\n};\n\nexport const ConnectedLoginForm = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(WrappedContainer);\n","import React, { memo } from 'react';\r\nimport classnames from 'classnames/bind';\r\nimport styles from './index.module.scss';\r\nimport { ConnectedLoginForm } from './_components/connected-login-form';\r\n\r\nconst cn = classnames.bind(styles);\r\n\r\nconst BLOCK_NAME = 'Page';\r\n\r\nexport const Page = memo(() => (\r\n  <div className={cn(`${BLOCK_NAME}`)}>\r\n    <ConnectedLoginForm />\r\n  </div>\r\n));\r\n","import loginFormStorage, {\n  loginWatcherSaga,\n  LOGIN_SAGA_NAME,\n  MODULE_REDUCER_NAME as loginFormReducerName,\n} from '../_redux/login-module';\n\nexport const storeInjectConfig = {\n  sagasToInject: [\n    {\n      name: LOGIN_SAGA_NAME,\n      saga: loginWatcherSaga,\n    },\n  ],\n  reducersToInject: [\n    {\n      name: loginFormReducerName,\n      reducer: loginFormStorage,\n    },\n  ],\n};\n","import React from 'react';\r\nimport { IAction, RouteNode } from '@wildberries/service-router';\r\nimport { ReduxStoreLoader } from '@wildberries/redux-core-modules';\r\nimport { LOGIN_ROUTE_NAME } from '@/_constants/routes';\r\nimport { Page } from './page';\r\nimport { storeInjectConfig } from './store-inject-config';\r\n\r\nconst pageNode = LOGIN_ROUTE_NAME;\r\n\r\nconst action: IAction = async ({ fromState, toState }) => ({\r\n  title: 'Логин',\r\n  content: (\r\n    <ReduxStoreLoader\r\n      fromState={fromState}\r\n      storeInjectConfig={storeInjectConfig}\r\n      toState={toState}\r\n      withoutRemovingReducers\r\n    >\r\n      <RouteNode nodeName={pageNode}>{() => <Page />}</RouteNode>\r\n    </ReduxStoreLoader>\r\n  ),\r\n});\r\n\r\nexport default action;\r\n"],"sourceRoot":""}